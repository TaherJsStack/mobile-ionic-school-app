{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/accordion.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/collections.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/portal.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/table.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/expansion.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js","webpack:///src/app/pages/childes/childes.page.html","webpack:///src/app/pages/childes/childes-routing.module.ts","webpack:///src/app/pages/childes/childes.module.ts","webpack:///src/app/pages/childes/childes.page.scss","webpack:///src/app/pages/childes/childes.page.ts"],"names":["nextId","CdkAccordion","_stateChanges","_openCloseAllActions","id","_multi","_openCloseAll","changes","next","complete","expanded","multi","ɵfac","CdkAccordion_Factory","t","ɵdir","type","selectors","inputs","exportAs","features","propDecorators","args","selector","nextId$1","ɵ0","undefined","CdkAccordionItem","accordion","_changeDetectorRef","_expansionDispatcher","_openCloseAllSubscription","EMPTY","closed","opened","destroyed","expandedChange","_expanded","_disabled","_removeUniqueSelectionListener","listen","accordionId","_subscribeToOpenCloseAllActions","emit","unsubscribe","disabled","subscribe","notify","markForCheck","CdkAccordionItem_Factory","outputs","provide","useValue","ctorParameters","decorators","providers","CdkAccordionModule","ɵmod","ɵinj","factory","CdkAccordionModule_Factory","ngJitMode","declarations","exports","DataSource","isDataSource","value","connect","ArrayDataSource","_data","CollectionViewer","SelectionModel","_multiple","initiallySelectedValues","_emitChanges","_selection","Set","_deselectedToEmit","_selectedToEmit","changed","length","forEach","_markSelected","values","_verifyValueAssignment","_emitChangeEvent","_unmarkSelected","isSelected","deselect","select","_unmarkAll","has","size","isEmpty","predicate","selected","_selected","sort","source","added","removed","add","push","getMultipleValuesInSingleSelectionError","Array","from","SelectionChange","Error","UniqueSelectionDispatcher","_listeners","name","listener","filter","registered","UniqueSelectionDispatcher_Factory","ɵprov","token","providedIn","TreeDataNodeFlattener","throwNullPortalError","throwPortalAlreadyAttachedError","throwPortalOutletAlreadyDisposedError","throwUnknownPortalTypeError","throwNullPortalOutletError","throwNoPortalAttachedError","ComponentType","Portal","host","hasAttached","_attachedHost","attach","detach","ComponentPortal","component","viewContainerRef","injector","componentFactoryResolver","TemplatePortal","template","context","templateRef","elementRef","DomPortal","element","nativeElement","PortalOutlet","BasePortalOutlet","_isDisposed","attachDomPortal","_attachedPortal","portal","attachComponentPortal","attachTemplatePortal","setAttachedHost","_invokeDisposeFn","fn","_disposeFn","BasePortalHost","DomPortalOutlet","outletElement","_componentFactoryResolver","_appRef","_defaultInjector","_document","parentNode","anchorNode","createComment","insertBefore","appendChild","replaceChild","resolver","componentFactory","resolveComponentFactory","componentRef","createComponent","setDisposeFn","destroy","create","attachView","hostView","detachView","_getComponentRootNode","viewContainer","viewRef","createEmbeddedView","detectChanges","rootNodes","rootNode","index","indexOf","remove","removeChild","DomPortalHost","CdkPortal","CdkPortal_Factory","TemplatePortalDirective","TemplatePortalDirective_Factory","ɵTemplatePortalDirective_BaseFactory","useExisting","CdkPortalOutlet","_viewContainerRef","_isInitialized","attached","_getRootNode","_attachedRef","ref","clear","nodeType","ELEMENT_NODE","CdkPortalOutlet_Factory","PortalHostDirective","PortalHostDirective_Factory","ɵPortalHostDirective_BaseFactory","PortalModule","PortalModule_Factory","PortalInjector","_parentInjector","_customTokens","notFoundValue","get","_c0","_c1","CdkTextColumn_th_1_Template","rf","ctx","ctx_r0","justify","headerText","CdkTextColumn_td_2_Template","data_r2","$implicit","ctx_r1","dataAccessor","CanStick","mixinHasStickyInput","base","_sticky","_hasStickyChanged","hasStickyChanged","v","prevValue","CDK_TABLE","TextColumnOptions","TEXT_COLUMN_OPTIONS","CellDef","CdkCellDef","CdkCellDef_Factory","CdkHeaderCellDef","CdkHeaderCellDef_Factory","CdkFooterCellDef","CdkFooterCellDef_Factory","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_table","_stickyEnd","_name","cssClassFriendlyName","replace","CdkColumnDef_Factory","contentQueries","CdkColumnDef_ContentQueries","dirIndex","_t","cell","first","headerCell","footerCell","sticky","stickyEnd","BaseCdkCell","columnDef","columnClassName","classList","CdkHeaderCell","CdkHeaderCell_Factory","hostAttrs","CdkFooterCell","CdkFooterCell_Factory","CdkCell","CdkCell_Factory","CDK_ROW_TEMPLATE","BaseRowDef","_differs","_columnsDiffer","columns","currentValue","find","diff","column","CdkHeaderRowDef","CdkFooterRowDef","BaseRowDef_Factory","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkHeaderRowDef_Factory","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkFooterRowDef_Factory","CdkRowDef","CdkRowDef_Factory","when","CdkCellOutletRowContext","CdkCellOutletMultiRowContext","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkCellOutlet_Factory","CdkHeaderRow","CdkHeaderRow_Factory","ɵcmp","decls","vars","consts","CdkHeaderRow_Template","directives","encapsulation","changeDetection","Default","None","CdkFooterRow","CdkFooterRow_Factory","CdkFooterRow_Template","CdkRow","CdkRow_Factory","CdkRow_Template","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_isBrowser","rows","stickyDirections","row","_removeStickyStyle","i","children","stickyStartStates","stickyEndStates","hasStickyColumns","some","state","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","isRtl","_addStickyStyle","rowsToStick","stickyStates","position","reverse","stickyHeight","rowIndex","j","getBoundingClientRect","height","tableElement","tfoot","querySelector","dir","style","zIndex","_getCalculatedZIndex","hasDirection","dirValue","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","width","widths","positions","nextPosition","getTableUnknownColumnError","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","data","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","RowOutlet","DataRowOutlet","DataRowOutlet_Factory","HeaderRowOutlet","HeaderRowOutlet_Factory","FooterRowOutlet","FooterRowOutlet_Factory","CDK_TABLE_TEMPLATE","RowContext","RowViewRef","RenderRow","CdkTable","_elementRef","role","_dir","_platform","_onDestroy","_columnDefsByName","Map","_customColumnDefs","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_cachedRenderRowsMap","stickyCssClass","_multiTemplateDataRows","viewChange","start","end","Number","MAX_VALUE","setAttribute","nodeName","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","trackBy","dataIndex","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","_renderUpdatedColumns","_forceRenderHeaderRows","_forceRenderFooterRows","dataSource","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_rowOutlet","_headerRowOutlet","_footerRowOutlet","disconnect","_renderRows","_getAllRenderRows","forEachOperation","record","prevIndex","currentIndex","previousIndex","_insertRow","item","view","move","_updateRowIndexContext","forEachIdentityChange","rowView","updateStickyColumnStyles","headerRowDef","footerRowDef","rowDef","headerRows","_getRenderedRows","thead","display","map","def","_stickyStyler","clearStickyPositioning","stickRows","resetStickyChanged","footerRows","updateStickyFooterContainer","dataRows","headerRow","_addStickyColumnStyles","footerRow","renderRows","prevCachedRenderRows","renderRowsForData","_getRenderRowsForData","set","WeakMap","renderRow","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","multiTemplateDataRows","_defaultRowDef","columnsDiffReducer","acc","getColumnsDiff","reduce","_forceRenderDataRows","_dataSource","dataStream","isArray","pipe","_renderRow","updateStickyHeaderRowStyles","updateStickyFooterRowStyles","columnName","updateStickyColumns","rowOutlet","renderedRows","renderIndex","outlet","_getCellTemplates","cellTemplate","count","last","even","odd","columnId","extractCellTemplate","documentFragment","createDocumentFragment","sections","tag","section","createElement","stickyCheckReducer","d","isBrowser","change","items","_trackByFn","console","warn","_switchDataSource","CdkTable_Factory","CdkTable_ContentQueries","viewQuery","CdkTable_Query","ngContentSelectors","CdkTable_Template","String","descendants","array","concat","CdkTextColumn","_options","_syncColumnDefName","_createDefaultHeaderText","defaultDataAccessor","addColumnDef","removeColumnDef","defaultHeaderTextTransform","toUpperCase","slice","CdkTextColumn_Factory","CdkTextColumn_Query","CdkTextColumn_Template","EXPORTED_DECLARATIONS","CdkTableModule","CdkTableModule_Factory","MatExpansionPanel_ng_template_5_Template","_c2","_c3","a0","a1","collapsedHeight","expandedHeight","_c4","params","MatExpansionPanelHeader_span_4_Template","_getExpandedState","_c5","_c6","MatAccordionBase","MAT_ACCORDION","EXPANSION_PANEL_ANIMATION_TIMING","matExpansionAnimations","indicatorRotate","transform","expansionHeaderHeight","optional","bodyExpansion","visibility","MatExpansionPanelContent","_template","MatExpansionPanelContent_Factory","uniqueId","MatExpansionPanelDefaultOptions","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","MatExpansionPanel","_uniqueSelectionDispatcher","_animationMode","defaultOptions","_hideToggle","afterExpand","afterCollapse","_inputChanges","_headerId","_bodyAnimationDone","x","y","fromState","toState","event","hideToggle","displayMode","_lazyContent","_portal","_body","focusedElement","activeElement","bodyElement","contains","_togglePosition","togglePosition","MatExpansionPanel_Factory","MatExpansionPanel_ContentQueries","MatExpansionPanel_Query","hostVars","hostBindings","MatExpansionPanel_HostBindings","_hasSpacing","MatExpansionPanel_Template","MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener","$event","styles","animation","OnPush","animations","MatExpansionPanelActionRow","MatExpansionPanelActionRow_Factory","MatExpansionPanelHeader","panel","_element","_focusMonitor","_parentChangeSubscription","_animationsDisabled","accordionHideToggleChange","_containsFocus","focusVia","monitor","origin","_handleHeaderFocus","toggle","keyCode","preventDefault","_toggle","_handleHeaderKeydown","options","stopMonitoring","MatExpansionPanelHeader_Factory","MatExpansionPanelHeader_HostBindings","MatExpansionPanelHeader_animation_expansionHeight_start_HostBindingHandler","_animationStarted","MatExpansionPanelHeader_click_HostBindingHandler","MatExpansionPanelHeader_keydown_HostBindingHandler","_keydown","_getPanelId","_isExpanded","_getTogglePosition","MatExpansionPanelHeader_Template","_showToggle","MatExpansionPanelDescription","MatExpansionPanelDescription_Factory","MatExpansionPanelTitle","MatExpansionPanelTitle_Factory","MatAccordion","arguments","_ownHeaders","_headers","headers","reset","header","notifyOnChanges","_keyManager","withWrap","manager","setFirstItemActive","setLastItemActive","onKeydown","updateActiveItem","show","MatAccordion_Factory","ɵMatAccordion_BaseFactory","MatAccordion_ContentQueries","MatAccordion_HostBindings","MatExpansionModule","MatExpansionModule_Factory","imports","MatTextColumn_th_1_Template","MatTextColumn_td_2_Template","MatTable","MatTable_Factory","ɵMatTable_BaseFactory","MatTable_Template","MatCellDef","MatCellDef_Factory","ɵMatCellDef_BaseFactory","MatHeaderCellDef","MatHeaderCellDef_Factory","ɵMatHeaderCellDef_BaseFactory","MatFooterCellDef","MatFooterCellDef_Factory","ɵMatFooterCellDef_BaseFactory","MatColumnDef","MatColumnDef_Factory","ɵMatColumnDef_BaseFactory","MatHeaderCell","MatHeaderCell_Factory","MatFooterCell","MatFooterCell_Factory","MatCell","MatCell_Factory","MatHeaderRowDef","MatHeaderRowDef_Factory","ɵMatHeaderRowDef_BaseFactory","MatFooterRowDef","MatFooterRowDef_Factory","ɵMatFooterRowDef_BaseFactory","MatRowDef","MatRowDef_Factory","ɵMatRowDef_BaseFactory","MatHeaderRow","MatHeaderRow_Factory","ɵMatHeaderRow_BaseFactory","MatHeaderRow_Template","MatFooterRow","MatFooterRow_Factory","ɵMatFooterRow_BaseFactory","MatFooterRow_Template","MatRow","MatRow_Factory","ɵMatRow_BaseFactory","MatRow_Template","MatTextColumn","MatTextColumn_Factory","ɵMatTextColumn_BaseFactory","MatTextColumn_Template","MatTableModule","MatTableModule_Factory","MAX_SAFE_INTEGER","MatTableDataSource","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","sortingDataAccessor","sortHeaderId","numberValue","sortData","active","a","b","valueA","valueB","comparatorResult","filterPredicate","dataStr","Object","keys","currentTerm","key","toLowerCase","transformedFilter","trim","_updateChangeSubscription","sortChange","_sort","initialized","pageChange","_paginator","page","filteredData","_filterData","orderedData","_orderData","paginatedData","_pageData","obj","paginator","_updatePaginator","startIndex","pageIndex","pageSize","filteredDataLength","Promise","resolve","then","lastPageIndex","Math","ceil","newPageIndex","min","routes","path","ChildesPageRoutingModule","forChild","ChildesPageModule","ChildesPage","http","route","LoginService","displayedColumns","subjectsLenght","classTimesData","classAllMonth","busTimesData","busAllMonth","chartData","label","chartType","showLegend","spinner","stock","log","paramMap","Subscription","getStudent","studentData","subjects","fTearm","termSubjects","classSubjects","lTearm","term","getStudentAttend","studentAttendData","classAttend","busAttend","jsonData","jsonDataBus","month","day","monthLength","e","detail","res","history","on","checked"],"mappings":"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","file":"childes-childes-module-es5.js","sourcesContent":["import { Directive, Input, EventEmitter, Optional, SkipSelf, ChangeDetectorRef, Output, NgModule } from '@angular/core';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/accordion.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each accordion.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nlet nextId = 0;\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /**\n         * Emits when the state of the accordion changes\n         */\n        this._stateChanges = new Subject();\n        /**\n         * Stream that emits true/false when openAll/closeAll is triggered.\n         */\n        this._openCloseAllActions = new Subject();\n        /**\n         * A readonly id value to use for unique selection coordination.\n         */\n        this.id = `cdk-accordion-${nextId++}`;\n        this._multi = false;\n    }\n    /**\n     * Whether the accordion should allow multiple expanded accordion items simultaneously.\n     * @return {?}\n     */\n    get multi() { return this._multi; }\n    /**\n     * @param {?} multi\n     * @return {?}\n     */\n    set multi(multi) { this._multi = coerceBooleanProperty(multi); }\n    /**\n     * Opens all enabled accordion items in an accordion where multi is enabled.\n     * @return {?}\n     */\n    openAll() {\n        this._openCloseAll(true);\n    }\n    /**\n     * Closes all enabled accordion items in an accordion where multi is enabled.\n     * @return {?}\n     */\n    closeAll() {\n        this._openCloseAll(false);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @private\n     * @param {?} expanded\n     * @return {?}\n     */\n    _openCloseAll(expanded) {\n        if (this.multi) {\n            this._openCloseAllActions.next(expanded);\n        }\n    }\n}\nCdkAccordion.ɵfac = function CdkAccordion_Factory(t) { return new (t || CdkAccordion)(); };\nCdkAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAccordion, selectors: [[\"cdk-accordion\"], [\"\", \"cdkAccordion\", \"\"]], inputs: { multi: \"multi\" }, exportAs: [\"cdkAccordion\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkAccordion.propDecorators = {\n    multi: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion, [cdkAccordion]',\n                exportAs: 'cdkAccordion'\n            }]\n    }], function () { return []; }, { multi: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkAccordion.ngAcceptInputType_multi;\n    /**\n     * Emits when the state of the accordion changes\n     * @type {?}\n     */\n    CdkAccordion.prototype._stateChanges;\n    /**\n     * Stream that emits true/false when openAll/closeAll is triggered.\n     * @type {?}\n     */\n    CdkAccordion.prototype._openCloseAllActions;\n    /**\n     * A readonly id value to use for unique selection coordination.\n     * @type {?}\n     */\n    CdkAccordion.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordion.prototype._multi;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/accordion-item.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each accordion item.\n * @type {?}\n */\nlet nextId$1 = 0;\nconst ɵ0 = undefined;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _expansionDispatcher\n     */\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /**\n         * Subscription to openAll/closeAll events.\n         */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /**\n         * Event emitted every time the AccordionItem is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted every time the AccordionItem is opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Event emitted when the AccordionItem is destroyed.\n         */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * \\@docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /**\n         * The unique AccordionItem id.\n         */\n        this.id = `cdk-accordion-child-${nextId$1++}`;\n        this._expanded = false;\n        this._disabled = false;\n        /**\n         * Unregister function for _expansionDispatcher.\n         */\n        this._removeUniqueSelectionListener = (/**\n         * @return {?}\n         */\n        () => { });\n        this._removeUniqueSelectionListener =\n            _expansionDispatcher.listen((/**\n             * @param {?} id\n             * @param {?} accordionId\n             * @return {?}\n             */\n            (id, accordionId) => {\n                if (this.accordion && !this.accordion.multi &&\n                    this.accordion.id === accordionId && this.id !== id) {\n                    this.expanded = false;\n                }\n            }));\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /**\n     * Whether the AccordionItem is expanded.\n     * @return {?}\n     */\n    get expanded() { return this._expanded; }\n    /**\n     * @param {?} expanded\n     * @return {?}\n     */\n    set expanded(expanded) {\n        expanded = coerceBooleanProperty(expanded);\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 * @type {?}\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the AccordionItem is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    set disabled(disabled) { this._disabled = coerceBooleanProperty(disabled); }\n    /**\n     * Emits an event for the accordion item being destroyed.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /**\n     * Toggles the expanded state of the accordion item.\n     * @return {?}\n     */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /**\n     * Sets the expanded state of the accordion item to false.\n     * @return {?}\n     */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /**\n     * Sets the expanded state of the accordion item to true.\n     * @return {?}\n     */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe((/**\n         * @param {?} expanded\n         * @return {?}\n         */\n        expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        }));\n    }\n}\nCdkAccordionItem.ɵfac = function CdkAccordionItem_Factory(t) { return new (t || CdkAccordionItem)(ɵngcc0.ɵɵdirectiveInject(CdkAccordion, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher)); };\nCdkAccordionItem.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAccordionItem, selectors: [[\"cdk-accordion-item\"], [\"\", \"cdkAccordionItem\", \"\"]], inputs: { expanded: \"expanded\", disabled: \"disabled\" }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, exportAs: [\"cdkAccordionItem\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide CdkAccordion as undefined to prevent nested accordion items from registering\n            // to the same accordion.\n            { provide: CdkAccordion, useValue: ɵ0 },\n        ])] });\n/** @nocollapse */\nCdkAccordionItem.ctorParameters = () => [\n    { type: CdkAccordion, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher }\n];\nCdkAccordionItem.propDecorators = {\n    closed: [{ type: Output }],\n    opened: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    expandedChange: [{ type: Output }],\n    expanded: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordionItem, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                exportAs: 'cdkAccordionItem',\n                providers: [\n                    // Provide CdkAccordion as undefined to prevent nested accordion items from registering\n                    // to the same accordion.\n                    { provide: CdkAccordion, useValue: ɵ0 },\n                ]\n            }]\n    }], function () { return [{ type: CdkAccordion, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }]; }, { closed: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], expandedChange: [{\n            type: Output\n        }], expanded: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkAccordionItem.ngAcceptInputType_expanded;\n    /** @type {?} */\n    CdkAccordionItem.ngAcceptInputType_disabled;\n    /**\n     * Subscription to openAll/closeAll events.\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._openCloseAllSubscription;\n    /**\n     * Event emitted every time the AccordionItem is closed.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.closed;\n    /**\n     * Event emitted every time the AccordionItem is opened.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.opened;\n    /**\n     * Event emitted when the AccordionItem is destroyed.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.destroyed;\n    /**\n     * Emits whenever the expanded state of the accordion changes.\n     * Primarily used to facilitate two-way binding.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.expandedChange;\n    /**\n     * The unique AccordionItem id.\n     * @type {?}\n     */\n    CdkAccordionItem.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._expanded;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._disabled;\n    /**\n     * Unregister function for _expansionDispatcher.\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._removeUniqueSelectionListener;\n    /** @type {?} */\n    CdkAccordionItem.prototype.accordion;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAccordionItem.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkAccordionItem.prototype._expansionDispatcher;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/accordion-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkAccordionModule {\n}\nCdkAccordionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkAccordionModule });\nCdkAccordionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkAccordionModule_Factory(t) { return new (t || CdkAccordionModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkAccordionModule, { declarations: [CdkAccordion,\n        CdkAccordionItem], exports: [CdkAccordion,\n        CdkAccordionItem] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordionModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkAccordion, CdkAccordionItem],\n                declarations: [CdkAccordion, CdkAccordionItem]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/accordion/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkAccordion, CdkAccordionItem, CdkAccordionModule };\n\n//# sourceMappingURL=accordion.js.map","import { isObservable, of, Subject } from 'rxjs';\nimport { Injectable, ɵɵdefineInjectable } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nclass DataSource {\n}\nif (false) {\n    /**\n     * Connects a collection viewer (such as a data-table) to this data source. Note that\n     * the stream provided will be accessed during change detection and should not directly change\n     * values that are bound in template views.\n     * @abstract\n     * @param {?} collectionViewer The component that exposes a view over the data provided by this\n     *     data source.\n     * @return {?} Observable that emits a new value when the data changes.\n     */\n    DataSource.prototype.connect = function (collectionViewer) { };\n    /**\n     * Disconnects a collection viewer (such as a data-table) from this data source. Can be used\n     * to perform any clean-up or tear-down operations when a view is being destroyed.\n     *\n     * @abstract\n     * @param {?} collectionViewer The component that exposes a view over the data provided by this\n     *     data source.\n     * @return {?}\n     */\n    DataSource.prototype.disconnect = function (collectionViewer) { };\n}\n/**\n * Checks whether an object is a data source.\n * @param {?} value\n * @return {?}\n */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource.\n    return value && typeof value.connect === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/array-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * DataSource wrapper for a native array.\n * @template T\n */\nclass ArrayDataSource extends DataSource {\n    /**\n     * @param {?} _data\n     */\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    /**\n     * @return {?}\n     */\n    connect() {\n        return isObservable(this._data) ? this._data : of(this._data);\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() { }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ArrayDataSource.prototype._data;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/collection-viewer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface for any component that provides a view of some data collection and wants to provide\n * information regarding the view and any changes made.\n * @record\n */\nfunction CollectionViewer() { }\nif (false) {\n    /**\n     * A stream that emits whenever the `CollectionViewer` starts looking at a new portion of the\n     * data. The `start` index is inclusive, while the `end` is exclusive.\n     * @type {?}\n     */\n    CollectionViewer.prototype.viewChange;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/selection-model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to be used to power selecting one or more options from a list.\n * @template T\n */\nclass SelectionModel {\n    /**\n     * @param {?=} _multiple\n     * @param {?=} initiallySelectedValues\n     * @param {?=} _emitChanges\n     */\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        /**\n         * Currently-selected values.\n         */\n        this._selection = new Set();\n        /**\n         * Keeps track of the deselected options that haven't been emitted by the change event.\n         */\n        this._deselectedToEmit = [];\n        /**\n         * Keeps track of the selected options that haven't been emitted by the change event.\n         */\n        this._selectedToEmit = [];\n        /**\n         * Event emitted when the value has changed.\n         */\n        this.changed = new Subject();\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach((/**\n                 * @param {?} value\n                 * @return {?}\n                 */\n                value => this._markSelected(value)));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /**\n     * Selected values.\n     * @return {?}\n     */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    /**\n     * Selects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._markSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Deselects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._unmarkSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     * @param {?} value\n     * @return {?}\n     */\n    toggle(value) {\n        this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     * @return {?}\n     */\n    clear() {\n        this._unmarkAll();\n        this._emitChangeEvent();\n    }\n    /**\n     * Determines whether a value is selected.\n     * @param {?} value\n     * @return {?}\n     */\n    isSelected(value) {\n        return this._selection.has(value);\n    }\n    /**\n     * Determines whether the model does not have a value.\n     * @return {?}\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     * @return {?}\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     * @param {?=} predicate\n     * @return {?}\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            (/** @type {?} */ (this._selected)).sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     * @return {?}\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /**\n     * Emits a change event and clears the records of selected and deselected values.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /**\n     * Selects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _markSelected(value) {\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            this._selection.add(value);\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Deselects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _unmarkSelected(value) {\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Clears out the selected values.\n     * @private\n     * @return {?}\n     */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => this._unmarkSelected(value)));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n}\nif (false) {\n    /**\n     * Currently-selected values.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selection;\n    /**\n     * Keeps track of the deselected options that haven't been emitted by the change event.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._deselectedToEmit;\n    /**\n     * Keeps track of the selected options that haven't been emitted by the change event.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selectedToEmit;\n    /**\n     * Cache for the array value of the selected items.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selected;\n    /**\n     * Event emitted when the value has changed.\n     * @type {?}\n     */\n    SelectionModel.prototype.changed;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._emitChanges;\n}\n/**\n * Event emitted when the value of a MatSelectionModel has changed.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction SelectionChange() { }\nif (false) {\n    /**\n     * Model that dispatched the event.\n     * @type {?}\n     */\n    SelectionChange.prototype.source;\n    /**\n     * Options that were added to the model.\n     * @type {?}\n     */\n    SelectionChange.prototype.added;\n    /**\n     * Options that were removed from the model.\n     * @type {?}\n     */\n    SelectionChange.prototype.removed;\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/unique-selection-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nclass UniqueSelectionDispatcher {\n    constructor() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param {?} id ID of the item.\n     * @param {?} name Name of the item.\n     * @return {?}\n     */\n    notify(id, name) {\n        for (let listener of this._listeners) {\n            listener(id, name);\n        }\n    }\n    /**\n     * Listen for future changes to item selection.\n     * @param {?} listener\n     * @return {?} Function used to deregister listener\n     */\n    listen(listener) {\n        this._listeners.push(listener);\n        return (/**\n         * @return {?}\n         */\n        () => {\n            this._listeners = this._listeners.filter((/**\n             * @param {?} registered\n             * @return {?}\n             */\n            (registered) => {\n                return listener !== registered;\n            }));\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._listeners = [];\n    }\n}\nUniqueSelectionDispatcher.ɵfac = function UniqueSelectionDispatcher_Factory(t) { return new (t || UniqueSelectionDispatcher)(); };\n/** @nocollapse */ UniqueSelectionDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function UniqueSelectionDispatcher_Factory() { return new UniqueSelectionDispatcher(); }, token: UniqueSelectionDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UniqueSelectionDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    UniqueSelectionDispatcher.prototype._listeners;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/tree-adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface for a class that can flatten hierarchical structured data and re-expand the flattened\n * data back into its original structure. Should be used in conjunction with the cdk-tree.\n * @record\n * @template T\n */\nfunction TreeDataNodeFlattener() { }\nif (false) {\n    /**\n     * Transforms a set of hierarchical structured data into a flattened data array.\n     * @param {?} structuredData\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.flattenNodes = function (structuredData) { };\n    /**\n     * Expands a flattened array of data into its hierarchical form using the provided expansion\n     * model.\n     * @param {?} nodes\n     * @param {?} expansionModel\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.expandFlattenedNodes = function (nodes, expansionModel) { };\n    /**\n     * Put node descendants of node in array.\n     * If `onlyExpandable` is true, then only process expandable descendants.\n     * @param {?} node\n     * @param {?} nodes\n     * @param {?} onlyExpandable\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.nodeDescendents = function (node, nodes, onlyExpandable) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, getMultipleValuesInSingleSelectionError, isDataSource };\n\n//# sourceMappingURL=collections.js.map","import { ElementRef, Directive, TemplateRef, ViewContainerRef, EventEmitter, ComponentFactoryResolver, Inject, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * \\@docs-private\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * \\@docs-private\n * @return {?}\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface that can be used to generically type a class.\n * @record\n * @template T\n */\nfunction ComponentType() { }\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n * @abstract\n * @template T\n */\nclass Portal {\n    /**\n     * Attach this portal to a host.\n     * @param {?} host\n     * @return {?}\n     */\n    attach(host) {\n        if (host == null) {\n            throwNullPortalOutletError();\n        }\n        if (host.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        this._attachedHost = host;\n        return (/** @type {?} */ (host.attach(this)));\n    }\n    /**\n     * Detach this portal from its host\n     * @return {?}\n     */\n    detach() {\n        /** @type {?} */\n        let host = this._attachedHost;\n        if (host == null) {\n            throwNoPortalAttachedError();\n        }\n        else {\n            this._attachedHost = null;\n            host.detach();\n        }\n    }\n    /**\n     * Whether this portal is attached to a host.\n     * @return {?}\n     */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     * @param {?} host\n     * @return {?}\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    Portal.prototype._attachedHost;\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n * @template T\n */\nclass ComponentPortal extends Portal {\n    /**\n     * @param {?} component\n     * @param {?=} viewContainerRef\n     * @param {?=} injector\n     * @param {?=} componentFactoryResolver\n     */\n    constructor(component, viewContainerRef, injector, componentFactoryResolver) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n}\nif (false) {\n    /**\n     * The type of the component that will be instantiated for attachment.\n     * @type {?}\n     */\n    ComponentPortal.prototype.component;\n    /**\n     * [Optional] Where the attached component should live in Angular's *logical* component tree.\n     * This is different from where the component *renders*, which is determined by the PortalOutlet.\n     * The origin is necessary when the host is outside of the Angular application context.\n     * @type {?}\n     */\n    ComponentPortal.prototype.viewContainerRef;\n    /**\n     * [Optional] Injector used for the instantiation of the component.\n     * @type {?}\n     */\n    ComponentPortal.prototype.injector;\n    /**\n     * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n     * Defaults to using the resolver from the outlet that the portal is attached to.\n     * @type {?}\n     */\n    ComponentPortal.prototype.componentFactoryResolver;\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n * @template C\n */\nclass TemplatePortal extends Portal {\n    /**\n     * @param {?} template\n     * @param {?} viewContainerRef\n     * @param {?=} context\n     */\n    constructor(template, viewContainerRef, context) {\n        super();\n        this.templateRef = template;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n    }\n    /**\n     * @return {?}\n     */\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     * @param {?} host\n     * @param {?=} context\n     * @return {?}\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\nif (false) {\n    /**\n     * The embedded template that will be used to instantiate an embedded View in the host.\n     * @type {?}\n     */\n    TemplatePortal.prototype.templateRef;\n    /**\n     * Reference to the ViewContainer into which the template will be stamped out.\n     * @type {?}\n     */\n    TemplatePortal.prototype.viewContainerRef;\n    /**\n     * Contextual data to be passed in to the embedded view.\n     * @type {?}\n     */\n    TemplatePortal.prototype.context;\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n * @template T\n */\nclass DomPortal extends Portal {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        super();\n        this.element = element instanceof ElementRef ? element.nativeElement : element;\n    }\n}\nif (false) {\n    /**\n     * DOM node hosting the portal's content.\n     * @type {?}\n     */\n    DomPortal.prototype.element;\n}\n/**\n * A `PortalOutlet` is an space that can contain a single `Portal`.\n * @record\n */\nfunction PortalOutlet() { }\nif (false) {\n    /**\n     * Attaches a portal to this outlet.\n     * @param {?} portal\n     * @return {?}\n     */\n    PortalOutlet.prototype.attach = function (portal) { };\n    /**\n     * Detaches the currently attached portal from this outlet.\n     * @return {?}\n     */\n    PortalOutlet.prototype.detach = function () { };\n    /**\n     * Performs cleanup before the outlet is destroyed.\n     * @return {?}\n     */\n    PortalOutlet.prototype.dispose = function () { };\n    /**\n     * Whether there is currently a portal attached to this outlet.\n     * @return {?}\n     */\n    PortalOutlet.prototype.hasAttached = function () { };\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n * @abstract\n */\nclass BasePortalOutlet {\n    constructor() {\n        /**\n         * Whether this host has already been permanently disposed.\n         */\n        this._isDisposed = false;\n        // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n        this.attachDomPortal = null;\n    }\n    /**\n     * Whether this host has an attached portal.\n     * @return {?}\n     */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /**\n     * Attaches a portal.\n     * @param {?} portal\n     * @return {?}\n     */\n    attach(portal) {\n        if (!portal) {\n            throwNullPortalError();\n        }\n        if (this.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        if (this._isDisposed) {\n            throwPortalOutletAlreadyDisposedError();\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n            // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n        }\n        else if (this.attachDomPortal && portal instanceof DomPortal) {\n            this._attachedPortal = portal;\n            return this.attachDomPortal(portal);\n        }\n        throwUnknownPortalTypeError();\n    }\n    /**\n     * Detaches a previously attached portal.\n     * @return {?}\n     */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /**\n     * Permanently dispose of this portal host.\n     * @return {?}\n     */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\nif (false) {\n    /**\n     * The portal currently attached to the host.\n     * @type {?}\n     * @protected\n     */\n    BasePortalOutlet.prototype._attachedPortal;\n    /**\n     * A function that will permanently dispose this host.\n     * @type {?}\n     * @private\n     */\n    BasePortalOutlet.prototype._disposeFn;\n    /**\n     * Whether this host has already been permanently disposed.\n     * @type {?}\n     * @private\n     */\n    BasePortalOutlet.prototype._isDisposed;\n    /** @type {?} */\n    BasePortalOutlet.prototype.attachDomPortal;\n    /**\n     * @abstract\n     * @template T\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.attachComponentPortal = function (portal) { };\n    /**\n     * @abstract\n     * @template C\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.attachTemplatePortal = function (portal) { };\n}\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * \\@breaking-change 9.0.0\n * @abstract\n */\nclass BasePortalHost extends BasePortalOutlet {\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/dom-portal-outlet.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param {?} outletElement\n     * @param {?} _componentFactoryResolver\n     * @param {?} _appRef\n     * @param {?} _defaultInjector\n     * @param {?=} _document\n     */\n    constructor(outletElement, _componentFactoryResolver, _appRef, _defaultInjector, \n    /**\n     * @deprecated `_document` Parameter to be made required.\n     * @breaking-change 10.0.0\n     */\n    _document) {\n        super();\n        this.outletElement = outletElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n        /**\n         * Attaches a DOM portal by transferring its content into the outlet.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            // @breaking-change 10.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            /** @type {?} */\n            const element = portal.element;\n            if (!element.parentNode) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            /** @type {?} */\n            const anchorNode = this._document.createComment('dom-portal');\n            element.parentNode.insertBefore(anchorNode, element);\n            this.outletElement.appendChild(element);\n            super.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                // We can't use `replaceWith` here because IE doesn't support it.\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            }));\n        });\n        this._document = _document;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @template T\n     * @param {?} portal Portal to be attached\n     * @return {?} Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        /** @type {?} */\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        /** @type {?} */\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        /** @type {?} */\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);\n            this.setDisposeFn((/**\n             * @return {?}\n             */\n            () => componentRef.destroy()));\n        }\n        else {\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                this._appRef.detachView(componentRef.hostView);\n                componentRef.destroy();\n            }));\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        /** @type {?} */\n        let viewContainer = portal.viewContainerRef;\n        /** @type {?} */\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n        viewRef.detectChanges();\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach((/**\n         * @param {?} rootNode\n         * @return {?}\n         */\n        rootNode => this.outletElement.appendChild(rootNode)));\n        this.setDisposeFn(((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        })));\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Clears out a portal from the DOM.\n     * @return {?}\n     */\n    dispose() {\n        super.dispose();\n        if (this.outletElement.parentNode != null) {\n            this.outletElement.parentNode.removeChild(this.outletElement);\n        }\n    }\n    /**\n     * Gets the root HTMLElement for an instantiated component.\n     * @private\n     * @param {?} componentRef\n     * @return {?}\n     */\n    _getComponentRootNode(componentRef) {\n        return (/** @type {?} */ (((/** @type {?} */ (componentRef.hostView))).rootNodes[0]));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._document;\n    /**\n     * Attaches a DOM portal by transferring its content into the outlet.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    DomPortalOutlet.prototype.attachDomPortal;\n    /**\n     * Element into which the content is projected.\n     * @type {?}\n     */\n    DomPortalOutlet.prototype.outletElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._appRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._defaultInjector;\n}\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * \\@breaking-change 9.0.0\n */\nclass DomPortalHost extends DomPortalOutlet {\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n    /**\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     */\n    constructor(templateRef, viewContainerRef) {\n        super(templateRef, viewContainerRef);\n    }\n}\nCdkPortal.ɵfac = function CdkPortal_Factory(t) { return new (t || CdkPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortal, selectors: [[\"\", \"cdkPortal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkPortal.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ViewContainerRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortal]',\n                exportAs: 'cdkPortal'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }]; }, null); })();\n/**\n * @deprecated Use `CdkPortal` instead.\n * \\@breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n}\nTemplatePortalDirective.ɵfac = function TemplatePortalDirective_Factory(t) { return ɵTemplatePortalDirective_BaseFactory(t || TemplatePortalDirective); };\nTemplatePortalDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TemplatePortalDirective, selectors: [[\"\", \"cdk-portal\", \"\"], [\"\", \"portal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortal,\n                useExisting: TemplatePortalDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵTemplatePortalDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TemplatePortalDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TemplatePortalDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-portal], [portal]',\n                exportAs: 'cdkPortal',\n                providers: [{\n                        provide: CdkPortal,\n                        useExisting: TemplatePortalDirective\n                    }]\n            }]\n    }], null, null); })();\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param {?} _componentFactoryResolver\n     * @param {?} _viewContainerRef\n     * @param {?=} _document\n     */\n    constructor(_componentFactoryResolver, _viewContainerRef, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super();\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._viewContainerRef = _viewContainerRef;\n        /**\n         * Whether the portal component is initialized.\n         */\n        this._isInitialized = false;\n        /**\n         * Emits when a portal is attached to the outlet.\n         */\n        this.attached = new EventEmitter();\n        /**\n         * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            // @breaking-change 9.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            /** @type {?} */\n            const element = portal.element;\n            if (!element.parentNode) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            /** @type {?} */\n            const anchorNode = this._document.createComment('dom-portal');\n            portal.setAttachedHost(this);\n            element.parentNode.insertBefore(anchorNode, element);\n            this._getRootNode().appendChild(element);\n            super.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                if (anchorNode.parentNode) {\n                    (/** @type {?} */ (anchorNode.parentNode)).replaceChild(element, anchorNode);\n                }\n            }));\n        });\n        this._document = _document;\n    }\n    /**\n     * Portal associated with the Portal outlet.\n     * @return {?}\n     */\n    get portal() {\n        return this._attachedPortal;\n    }\n    /**\n     * @param {?} portal\n     * @return {?}\n     */\n    set portal(portal) {\n        // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n        // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n        // and attach a portal programmatically in the parent component. When Angular does the first CD\n        // round, it will fire the setter with empty string, causing the user's content to be cleared.\n        if (this.hasAttached() && !portal && !this._isInitialized) {\n            return;\n        }\n        if (this.hasAttached()) {\n            super.detach();\n        }\n        if (portal) {\n            super.attach(portal);\n        }\n        this._attachedPortal = portal;\n    }\n    /**\n     * Component or view reference that is attached to the portal.\n     * @return {?}\n     */\n    get attachedRef() {\n        return this._attachedRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.dispose();\n        this._attachedPortal = null;\n        this._attachedRef = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @template T\n     * @param {?} portal Portal to be attached to the portal outlet.\n     * @return {?} Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        /** @type {?} */\n        const viewContainerRef = portal.viewContainerRef != null ?\n            portal.viewContainerRef :\n            this._viewContainerRef;\n        /** @type {?} */\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        /** @type {?} */\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        /** @type {?} */\n        const ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector);\n        // If we're using a view container that's different from the injected one (e.g. when the portal\n        // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n        // inside of the alternate view container.\n        if (viewContainerRef !== this._viewContainerRef) {\n            this._getRootNode().appendChild(((/** @type {?} */ (ref.hostView))).rootNodes[0]);\n        }\n        super.setDisposeFn((/**\n         * @return {?}\n         */\n        () => ref.destroy()));\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortalHost as an embedded View.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        portal.setAttachedHost(this);\n        /** @type {?} */\n        const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\n        super.setDisposeFn((/**\n         * @return {?}\n         */\n        () => this._viewContainerRef.clear()));\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    }\n    /**\n     * Gets the root node of the portal outlet.\n     * @private\n     * @return {?}\n     */\n    _getRootNode() {\n        /** @type {?} */\n        const nativeElement = this._viewContainerRef.element.nativeElement;\n        // The directive could be set on a template which will result in a comment\n        // node being the root. Use the comment's parent node if that is the case.\n        return (/** @type {?} */ ((nativeElement.nodeType === nativeElement.ELEMENT_NODE ?\n            nativeElement : (/** @type {?} */ (nativeElement.parentNode)))));\n    }\n}\nCdkPortalOutlet.ɵfac = function CdkPortalOutlet_Factory(t) { return new (t || CdkPortalOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkPortalOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortalOutlet, selectors: [[\"\", \"cdkPortalOutlet\", \"\"]], inputs: { portal: [\"cdkPortalOutlet\", \"portal\"] }, outputs: { attached: \"attached\" }, exportAs: [\"cdkPortalOutlet\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkPortalOutlet.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkPortalOutlet.propDecorators = {\n    attached: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortalOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalOutlet]',\n                exportAs: 'cdkPortalOutlet',\n                inputs: ['portal: cdkPortalOutlet']\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { attached: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkPortalOutlet.ngAcceptInputType_portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._document;\n    /**\n     * Whether the portal component is initialized.\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._isInitialized;\n    /**\n     * Reference to the currently-attached component/view ref.\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._attachedRef;\n    /**\n     * Emits when a portal is attached to the outlet.\n     * @type {?}\n     */\n    CdkPortalOutlet.prototype.attached;\n    /**\n     * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    CdkPortalOutlet.prototype.attachDomPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._viewContainerRef;\n}\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * \\@breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n}\nPortalHostDirective.ɵfac = function PortalHostDirective_Factory(t) { return ɵPortalHostDirective_BaseFactory(t || PortalHostDirective); };\nPortalHostDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PortalHostDirective, selectors: [[\"\", \"cdkPortalHost\", \"\"], [\"\", \"portalHost\", \"\"]], inputs: { portal: [\"cdkPortalHost\", \"portal\"] }, exportAs: [\"cdkPortalHost\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortalOutlet,\n                useExisting: PortalHostDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵPortalHostDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(PortalHostDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalHostDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalHost], [portalHost]',\n                exportAs: 'cdkPortalHost',\n                inputs: ['portal: cdkPortalHost'],\n                providers: [{\n                        provide: CdkPortalOutlet,\n                        useExisting: PortalHostDirective\n                    }]\n            }]\n    }], null, null); })();\nclass PortalModule {\n}\nPortalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PortalModule });\nPortalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PortalModule_Factory(t) { return new (t || PortalModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PortalModule, { declarations: [CdkPortal,\n        CdkPortalOutlet,\n        TemplatePortalDirective,\n        PortalHostDirective], exports: [CdkPortal,\n        CdkPortalOutlet,\n        TemplatePortalDirective,\n        PortalHostDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-injector.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * \\@docs-private\n */\nclass PortalInjector {\n    /**\n     * @param {?} _parentInjector\n     * @param {?} _customTokens\n     */\n    constructor(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue) {\n        /** @type {?} */\n        const value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    PortalInjector.prototype._parentInjector;\n    /**\n     * @type {?}\n     * @private\n     */\n    PortalInjector.prototype._customTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalHost, DomPortalOutlet, Portal, PortalHostDirective, PortalInjector, PortalModule, TemplatePortal, TemplatePortalDirective };\n\n//# sourceMappingURL=portal.js.map","import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { isDataSource } from '@angular/cdk/collections';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\n\nconst _c0 = [[[\"caption\"]]];\nconst _c1 = [\"caption\"];\nfunction CdkTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction CdkTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, Inject, Optional, Input, ContentChild, ElementRef, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, isDevMode, ChangeDetectorRef, Attribute, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/can-stick.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a mixin to provide a directive with a function that checks if the sticky input has\n * been changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @record\n */\nfunction CanStick() { }\nif (false) {\n    /**\n     * Whether sticky positioning should be applied.\n     * @type {?}\n     */\n    CanStick.prototype.sticky;\n    /**\n     * Whether the sticky input has changed since it was last checked.\n     * @type {?}\n     */\n    CanStick.prototype._hasStickyChanged;\n    /**\n     * Whether the sticky value has changed since this was last called.\n     * @return {?}\n     */\n    CanStick.prototype.hasStickyChanged = function () { };\n    /**\n     * Resets the dirty check for cases where the sticky state has been used without checking.\n     * @return {?}\n     */\n    CanStick.prototype.resetStickyChanged = function () { };\n}\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /**\n             * Whether the sticky input has changed since it was last checked.\n             */\n            this._hasStickyChanged = false;\n        }\n        /**\n         * Whether sticky positioning should be applied.\n         * @return {?}\n         */\n        get sticky() { return this._sticky; }\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set sticky(v) {\n            /** @type {?} */\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /**\n         * Whether the sticky value has changed since this was last called.\n         * @return {?}\n         */\n        hasStickyChanged() {\n            /** @type {?} */\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /**\n         * Resets the dirty check for cases where the sticky state has been used without checking.\n         * @return {?}\n         */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/tokens.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/**\n * Configurable options for `CdkTextColumn`.\n * @record\n * @template T\n */\nfunction TextColumnOptions() { }\nif (false) {\n    /**\n     * Default function that provides the header text based on the column name if a header\n     * text is not provided.\n     * @type {?|undefined}\n     */\n    TextColumnOptions.prototype.defaultHeaderTextTransform;\n    /**\n     * Default data accessor to use if one is not provided.\n     * @type {?|undefined}\n     */\n    TextColumnOptions.prototype.defaultDataAccessor;\n}\n/**\n * Injection token that can be used to specify the text column options.\n * @type {?}\n */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/cell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base interface for a cell definition. Captures a column's cell template definition.\n * @record\n */\nfunction CellDef() { }\nif (false) {\n    /** @type {?} */\n    CellDef.prototype.template;\n}\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]] });\n/** @nocollapse */\nCdkCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkCellDef.prototype.template;\n}\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]] });\n/** @nocollapse */\nCdkHeaderCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkHeaderCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkHeaderCellDef.prototype.template;\n}\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]] });\n/** @nocollapse */\nCdkFooterCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkFooterCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkFooterCellDef.prototype.template;\n}\n// Boilerplate for applying mixins to CdkColumnDef.\n/**\n * \\@docs-private\n */\nclass CdkColumnDefBase {\n}\n/** @type {?} */\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    /**\n     * @param {?=} _table\n     */\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /**\n     * Unique name for this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        // If the directive is set without a name (updated programatically), then this setter will\n        // trigger with an empty string and should not overwrite the programatically set value.\n        if (name) {\n            this._name = name;\n            this.cssClassFriendlyName = name.replace(/[^a-z0-9_-]/ig, '-');\n        }\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     * @return {?}\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set stickyEnd(v) {\n        /** @type {?} */\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n}\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) { return new (t || CdkColumnDef)(ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n    } }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkColumnDef.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\nCdkColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\n    cell: [{ type: ContentChild, args: [CdkCellDef,] }],\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef,] }],\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkColumnDef]',\n                inputs: ['sticky'],\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, { name: [{\n            type: Input,\n            args: ['cdkColumnDef']\n        }], stickyEnd: [{\n            type: Input,\n            args: ['stickyEnd']\n        }], cell: [{\n            type: ContentChild,\n            args: [CdkCellDef]\n        }], headerCell: [{\n            type: ContentChild,\n            args: [CdkHeaderCellDef]\n        }], footerCell: [{\n            type: ContentChild,\n            args: [CdkFooterCellDef]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkColumnDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkColumnDef.ngAcceptInputType_stickyEnd;\n    /** @type {?} */\n    CdkColumnDef.prototype._name;\n    /** @type {?} */\n    CdkColumnDef.prototype._stickyEnd;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.cell;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.headerCell;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.footerCell;\n    /**\n     * Transformed version of the column name that can be used as part of a CSS classname. Excludes\n     * all non-alphanumeric characters and the special characters '-' and '_'. Any characters that\n     * do not match are replaced by the '-' character.\n     * @type {?}\n     */\n    CdkColumnDef.prototype.cssClassFriendlyName;\n    /** @type {?} */\n    CdkColumnDef.prototype._table;\n}\n/**\n * Base class for the cells. Adds a CSS classname that identifies the column it renders in.\n */\nclass BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        /** @type {?} */\n        const columnClassName = `cdk-column-${columnDef.cssClassFriendlyName}`;\n        elementRef.nativeElement.classList.add(columnClassName);\n    }\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass CdkHeaderCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\n                host: {\n                    'class': 'cdk-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass CdkFooterCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                host: {\n                    'class': 'cdk-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Cell template container that adds the right classes and role.\n */\nclass CdkCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkCell.ɵfac = function CdkCell_Factory(t) { return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-cell, td[cdk-cell]',\n                host: {\n                    'class': 'cdk-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/row.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @type {?}\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n * @abstract\n */\nclass BaseRowDef {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            /** @type {?} */\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     * @return {?}\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /**\n     * Gets this row def's relevant cell template from the provided column def.\n     * @param {?} column\n     * @return {?}\n     */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) { return new (t || BaseRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nBaseRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BaseRowDef, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nBaseRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BaseRowDef, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\nif (false) {\n    /**\n     * The columns to be displayed on this row.\n     * @type {?}\n     */\n    BaseRowDef.prototype.columns;\n    /**\n     * Differ used to check if any changes were made to the columns.\n     * @type {?}\n     * @protected\n     */\n    BaseRowDef.prototype._columnsDiffer;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    BaseRowDef.prototype.template;\n    /**\n     * @type {?}\n     * @protected\n     */\n    BaseRowDef.prototype._differs;\n}\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/**\n * \\@docs-private\n */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     * @param {?=} _table\n     */\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkHeaderRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkHeaderRowDef]',\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkHeaderRowDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkHeaderRowDef.prototype._table;\n}\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/**\n * \\@docs-private\n */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     * @param {?=} _table\n     */\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nCdkFooterRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkFooterRowDef]',\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkFooterRowDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkFooterRowDef.prototype._table;\n}\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     * @param {?=} _table\n     */\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n}\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CDK_TABLE, 8)); };\nCdkRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_TABLE,] }, { type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkRowDef]',\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_TABLE]\n            }, {\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Function that should return true if this row template should be used for the provided index\n     * and row data. If left undefined, this row will be considered the default row template to use\n     * when no other when functions return true for the data.\n     * For every row, there must be at least one when function that passes or an undefined to default.\n     * @type {?}\n     */\n    CdkRowDef.prototype.when;\n    /** @type {?} */\n    CdkRowDef.prototype._table;\n}\n/**\n * Context provided to the row cells when `multiTemplateDataRows` is false\n * @record\n * @template T\n */\nfunction CdkCellOutletRowContext() { }\nif (false) {\n    /**\n     * Data for the row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.$implicit;\n    /**\n     * Index of the data object in the provided data array.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.index;\n    /**\n     * Length of the number of total rows.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.count;\n    /**\n     * True if this cell is contained in the first row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.first;\n    /**\n     * True if this cell is contained in the last row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.last;\n    /**\n     * True if this cell is contained in a row with an even-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.even;\n    /**\n     * True if this cell is contained in a row with an odd-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.odd;\n}\n/**\n * Context provided to the row cells when `multiTemplateDataRows` is true. This context is the same\n * as CdkCellOutletRowContext except that the single `index` value is replaced by `dataIndex` and\n * `renderIndex`.\n * @record\n * @template T\n */\nfunction CdkCellOutletMultiRowContext() { }\nif (false) {\n    /**\n     * Data for the row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.$implicit;\n    /**\n     * Index of the data object in the provided data array.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.dataIndex;\n    /**\n     * Index location of the rendered row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.renderIndex;\n    /**\n     * Length of the number of total rows.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.count;\n    /**\n     * True if this cell is contained in the first row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.first;\n    /**\n     * True if this cell is contained in the last row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.last;\n    /**\n     * True if this cell is contained in a row with an even-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.even;\n    /**\n     * True if this cell is contained in a row with an odd-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.odd;\n}\n/**\n * Outlet for rendering cells inside of a row or header row.\n * \\@docs-private\n */\nclass CdkCellOutlet {\n    /**\n     * @param {?} _viewContainer\n     */\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkCellOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]] });\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\n/** @nocollapse */\nCdkCellOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, null); })();\nif (false) {\n    /**\n     * Static property containing the latest constructed instance of this class.\n     * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n     * createEmbeddedView. After one of these components are created, this property will provide\n     * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n     * construct the cells with the provided context.\n     * @type {?}\n     */\n    CdkCellOutlet.mostRecentCellOutlet;\n    /**\n     * The ordered list of cells to render within this outlet's view container\n     * @type {?}\n     */\n    CdkCellOutlet.prototype.cells;\n    /**\n     * The data context to be provided to each cell\n     * @type {?}\n     */\n    CdkCellOutlet.prototype.context;\n    /** @type {?} */\n    CdkCellOutlet.prototype._viewContainer;\n}\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); };\nCdkHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-header-row, tr[cdk-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); };\nCdkFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkRow {\n}\nCdkRow.ɵfac = function CdkRow_Factory(t) { return new (t || CdkRow)(); };\nCdkRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-row, tr[cdk-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/sticky-styler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * \\@docs-private\n * @type {?}\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * \\@docs-private\n */\nclass StickyStyler {\n    /**\n     * @param {?} _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param {?} _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param {?} direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param {?=} _isBrowser Whether the table is currently being rendered on the server or the client.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _isBrowser = true) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._isBrowser = _isBrowser;\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param {?} rows The list of rows that should be cleared from sticking in the provided directions\n     * @param {?} stickyDirections The directions that should no longer be set as sticky on the rows.\n     * @return {?}\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            this._removeStickyStyle(row, stickyDirections);\n            for (let i = 0; i < row.children.length; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                this._removeStickyStyle(cell, stickyDirections);\n            }\n        }\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param {?} rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param {?} stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param {?} stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @return {?}\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates) {\n        /** @type {?} */\n        const hasStickyColumns = stickyStartStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state)) || stickyEndStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state));\n        if (!rows.length || !hasStickyColumns || !this._isBrowser) {\n            return;\n        }\n        /** @type {?} */\n        const firstRow = rows[0];\n        /** @type {?} */\n        const numCells = firstRow.children.length;\n        /** @type {?} */\n        const cellWidths = this._getCellWidths(firstRow);\n        /** @type {?} */\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        /** @type {?} */\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        /** @type {?} */\n        const isRtl = this.direction === 'rtl';\n        for (const row of rows) {\n            for (let i = 0; i < numCells; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                if (stickyStartStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'right' : 'left', startPositions[i]);\n                }\n                if (stickyEndStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'left' : 'right', endPositions[i]);\n                }\n            }\n        }\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param {?} rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param {?} stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param {?} position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     * @return {?}\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on.\n        /** @type {?} */\n        const rows = position === 'bottom' ? rowsToStick.reverse() : rowsToStick;\n        /** @type {?} */\n        let stickyHeight = 0;\n        for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n            if (!stickyStates[rowIndex]) {\n                continue;\n            }\n            /** @type {?} */\n            const row = rows[rowIndex];\n            if (this._isNativeHtmlTable) {\n                for (let j = 0; j < row.children.length; j++) {\n                    /** @type {?} */\n                    const cell = (/** @type {?} */ (row.children[j]));\n                    this._addStickyStyle(cell, position, stickyHeight);\n                }\n            }\n            else {\n                // Flex does not respect the stick positioning on the cells, needs to be applied to the row.\n                // If this is applied on a native table, Safari causes the header to fly in wrong direction.\n                this._addStickyStyle(row, position, stickyHeight);\n            }\n            if (rowIndex === rows.length - 1) {\n                // prevent unnecessary reflow from getBoundingClientRect()\n                return;\n            }\n            stickyHeight += row.getBoundingClientRect().height;\n        }\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     * @param {?} tableElement\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        /** @type {?} */\n        const tfoot = (/** @type {?} */ (tableElement.querySelector('tfoot')));\n        if (stickyStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => !state))) {\n            this._removeStickyStyle(tfoot, ['bottom']);\n        }\n        else {\n            this._addStickyStyle(tfoot, 'bottom', 0);\n        }\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     * @param {?} element\n     * @param {?} stickyDirections\n     * @return {?}\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n        }\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        /** @type {?} */\n        const hasDirection = STICKY_DIRECTIONS.some((/**\n         * @param {?} dir\n         * @return {?}\n         */\n        dir => !!element.style[dir]));\n        if (!hasDirection) {\n            element.style.position = '';\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     * @param {?} element\n     * @param {?} dir\n     * @param {?} dirValue\n     * @return {?}\n     */\n    _addStickyStyle(element, dir, dirValue) {\n        element.classList.add(this._stickCellCss);\n        element.style[dir] = `${dirValue}px`;\n        element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        element.style.zIndex = this._getCalculatedZIndex(element);\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     * @param {?} element\n     * @return {?}\n     */\n    _getCalculatedZIndex(element) {\n        /** @type {?} */\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        /** @type {?} */\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of (/** @type {?} */ (STICKY_DIRECTIONS))) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /**\n     * Gets the widths for each cell in the provided row.\n     * @param {?} row\n     * @return {?}\n     */\n    _getCellWidths(row) {\n        /** @type {?} */\n        const cellWidths = [];\n        /** @type {?} */\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            /** @type {?} */\n            let cell = (/** @type {?} */ (firstRowCells[i]));\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._isNativeHtmlTable;\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._stickCellCss;\n    /** @type {?} */\n    StickyStyler.prototype.direction;\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._isBrowser;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * \\@docs-private\n * @param {?} id Id whose lookup failed.\n * @return {?}\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * \\@docs-private\n * @param {?} name\n * @return {?}\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * \\@docs-private\n * @param {?} data\n * @return {?}\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface used to provide an outlet for rows to be inserted into.\n * @record\n */\nfunction RowOutlet() { }\nif (false) {\n    /** @type {?} */\n    RowOutlet.prototype.viewContainer;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * \\@docs-private\n */\nclass DataRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]] });\n/** @nocollapse */\nDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[rowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    DataRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    DataRowOutlet.prototype.elementRef;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * \\@docs-private\n */\nclass HeaderRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nHeaderRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]] });\n/** @nocollapse */\nHeaderRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[headerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    HeaderRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    HeaderRowOutlet.prototype.elementRef;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * \\@docs-private\n */\nclass FooterRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFooterRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]] });\n/** @nocollapse */\nFooterRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[footerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    FooterRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    FooterRowOutlet.prototype.elementRef;\n}\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Interface used to conveniently type the possible context interfaces for the render row.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction RowContext() { }\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * \\@docs-private\n * @abstract\n * @template T\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * Set of properties that represents the identity of a single rendered row.\n *\n * When the table needs to determine the list of rows to render, it will do so by iterating through\n * each data object and evaluating its list of row templates to display (when multiTemplateDataRows\n * is false, there is only one template per data object). For each pair of data object and row\n * template, a `RenderRow` is added to the list of rows to render. If the data object and row\n * template pair has already been rendered, the previously used `RenderRow` is added; else a new\n * `RenderRow` is * created. Once the list is complete and all data objects have been itereated\n * through, a diff is performed to determine the changes that need to be made to the rendered rows.\n *\n * \\@docs-private\n * @record\n * @template T\n */\nfunction RenderRow() { }\nif (false) {\n    /** @type {?} */\n    RenderRow.prototype.data;\n    /** @type {?} */\n    RenderRow.prototype.dataIndex;\n    /** @type {?} */\n    RenderRow.prototype.rowDef;\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n * @template T\n */\nclass CdkTable {\n    /**\n     * @param {?} _differs\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} role\n     * @param {?} _dir\n     * @param {?} _document\n     * @param {?} _platform\n     */\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        this._multiTemplateDataRows = false;\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * \\@docs-private\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     * @return {?}\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set trackBy(fn) {\n        if (isDevMode() && fn != null && typeof fn !== 'function' && (/** @type {?} */ (console)) &&\n            (/** @type {?} */ (console.warn))) {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     * @return {?}\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    /**\n     * @param {?} dataSource\n     * @return {?}\n     */\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     * @return {?}\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((/**\n         * @param {?} _i\n         * @param {?} dataRow\n         * @return {?}\n         */\n        (_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        this._renderUpdatedColumns();\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        this._checkStickyStates();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     * @return {?}\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        /** @type {?} */\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            return;\n        }\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} prevIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, prevIndex, currentIndex) => {\n            if (record.previousIndex == null) {\n                this._insertRow(record.item, (/** @type {?} */ (currentIndex)));\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove((/** @type {?} */ (prevIndex)));\n            }\n            else {\n                /** @type {?} */\n                const view = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (prevIndex)))));\n                viewContainer.move((/** @type {?} */ (view)), currentIndex);\n            }\n        }));\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const rowView = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (record.currentIndex)))));\n            rowView.context.$implicit = record.item.data;\n        }));\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Sets the header row definition to be used. Overrides the header row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the header row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addHeaderRowDef` and `removeHeaderRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    setHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs = new Set([headerRowDef]);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Sets the footer row definition to be used. Overrides the footer row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the footer row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addFooterRowDef` and `removeFooterRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    setFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs = new Set([footerRowDef]);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Adds a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /**\n     * Removes a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /**\n     * Adds a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /**\n     * Removes a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /**\n     * Adds a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Removes a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Adds a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Removes a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyHeaderRowStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._headerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyFooterRowStyles() {\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._footerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     * @return {?}\n     */\n    updateStickyColumnStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // Clear the left and right positioning from all columns in the table across all rows since\n        // sticky columns span across all table sections (header, data, footer)\n        this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((/**\n         * @param {?} headerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        }));\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            // Collect all the rows rendered with this row definition.\n            /** @type {?} */\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        }));\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((/**\n         * @param {?} footerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        }));\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     * @private\n     * @return {?}\n     */\n    _getAllRenderRows() {\n        /** @type {?} */\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        /** @type {?} */\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            /** @type {?} */\n            let data = this._data[i];\n            /** @type {?} */\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                /** @type {?} */\n                let renderRow = renderRowsForData[j];\n                /** @type {?} */\n                const cache = (/** @type {?} */ (this._cachedRenderRowsMap.get(renderRow.data)));\n                if (cache.has(renderRow.rowDef)) {\n                    (/** @type {?} */ (cache.get(renderRow.rowDef))).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     * @private\n     * @param {?} data\n     * @param {?} dataIndex\n     * @param {?=} cache\n     * @return {?}\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        /** @type {?} */\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            /** @type {?} */\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? (/** @type {?} */ (cache.get(rowDef))) : [];\n            if (cachedRenderRows.length) {\n                /** @type {?} */\n                const dataRow = (/** @type {?} */ (cachedRenderRows.shift()));\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        }));\n    }\n    /**\n     * Update the map containing the content's column definitions.\n     * @private\n     * @return {?}\n     */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        /** @type {?} */\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => {\n            if (this._columnDefsByName.has(columnDef.name)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        }));\n    }\n    /**\n     * Update the list of all available row definitions that can be used.\n     * @private\n     * @return {?}\n     */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        /** @type {?} */\n        const defaultRowDefs = this._rowDefs.filter((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => !def.when));\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     * @private\n     * @return {?}\n     */\n    _renderUpdatedColumns() {\n        /** @type {?} */\n        const columnsDiffReducer = (/**\n         * @param {?} acc\n         * @param {?} def\n         * @return {?}\n         */\n        (acc, def) => acc || !!def.getColumnsDiff());\n        // Force re-render data rows if the list of column definitions have changed.\n        if (this._rowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed..\n        if (this._headerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderHeaderRows();\n        }\n        if (this._footerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderFooterRows();\n        }\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     * @private\n     * @param {?} dataSource\n     * @return {?}\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /**\n     * Set up a subscription for the data provided by the data source.\n     * @private\n     * @return {?}\n     */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        /** @type {?} */\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy)).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data || [];\n            this.renderRows();\n        }));\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._headerRowOutlet, def, i)));\n        this.updateStickyHeaderRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._footerRowOutlet, def, i)));\n        this.updateStickyFooterRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Adds the sticky column styles for the rows according to the columns' stick states.\n     * @private\n     * @param {?} rows\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _addStickyColumnStyles(rows, rowDef) {\n        /** @type {?} */\n        const columnDefs = Array.from(rowDef.columns || []).map((/**\n         * @param {?} columnName\n         * @return {?}\n         */\n        columnName => {\n            /** @type {?} */\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return (/** @type {?} */ (columnDef));\n        }));\n        /** @type {?} */\n        const stickyStartStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.sticky));\n        /** @type {?} */\n        const stickyEndStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.stickyEnd));\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates);\n    }\n    /**\n     * Gets the list of rows that have been rendered in the row outlet.\n     * @param {?} rowOutlet\n     * @return {?}\n     */\n    _getRenderedRows(rowOutlet) {\n        /** @type {?} */\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            /** @type {?} */\n            const viewRef = ((/** @type {?} */ ((/** @type {?} */ (rowOutlet.viewContainer.get(i))))));\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     * @param {?} data\n     * @param {?} dataIndex\n     * @return {?}\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        /** @type {?} */\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => !def.when || def.when(dataIndex, data)));\n        }\n        else {\n            /** @type {?} */\n            let rowDef = this._rowDefs.find((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => def.when && def.when(dataIndex, data))) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    /**\n     * Create the embedded view for the data row template and place it in the correct index location\n     * within the data row view container.\n     * @private\n     * @param {?} renderRow\n     * @param {?} renderIndex\n     * @return {?}\n     */\n    _insertRow(renderRow, renderIndex) {\n        /** @type {?} */\n        const rowDef = renderRow.rowDef;\n        /** @type {?} */\n        const context = { $implicit: renderRow.data };\n        this._renderRow(this._rowOutlet, rowDef, renderIndex, context);\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     * @private\n     * @param {?} outlet\n     * @param {?} rowDef\n     * @param {?} index\n     * @param {?=} context\n     * @return {?}\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     * @private\n     * @return {?}\n     */\n    _updateRowIndexContext() {\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            /** @type {?} */\n            const viewRef = (/** @type {?} */ (viewContainer.get(renderIndex)));\n            /** @type {?} */\n            const context = (/** @type {?} */ (viewRef.context));\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /**\n     * Gets the column definitions for the provided row def.\n     * @private\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, (/**\n         * @param {?} columnId\n         * @return {?}\n         */\n        columnId => {\n            /** @type {?} */\n            const column = this._columnDefsByName.get(columnId);\n            if (!column) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        }));\n    }\n    /**\n     * Adds native table sections (e.g. tbody) and moves the row outlets into them.\n     * @private\n     * @return {?}\n     */\n    _applyNativeTableSections() {\n        /** @type {?} */\n        const documentFragment = this._document.createDocumentFragment();\n        /** @type {?} */\n        const sections = [\n            { tag: 'thead', outlet: this._headerRowOutlet },\n            { tag: 'tbody', outlet: this._rowOutlet },\n            { tag: 'tfoot', outlet: this._footerRowOutlet },\n        ];\n        for (const section of sections) {\n            /** @type {?} */\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            element.appendChild(section.outlet.elementRef.nativeElement);\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     * @private\n     * @return {?}\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     * @private\n     * @return {?}\n     */\n    _checkStickyStates() {\n        /** @type {?} */\n        const stickyCheckReducer = (/**\n         * @param {?} acc\n         * @param {?} d\n         * @return {?}\n         */\n        (acc, d) => {\n            return acc || d.hasStickyChanged();\n        });\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     * @private\n     * @return {?}\n     */\n    _setupStickyStyler() {\n        /** @type {?} */\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._platform.isBrowser);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        }));\n    }\n    /**\n     * Filters definitions that belong to this table from a QueryList.\n     * @private\n     * @template I\n     * @param {?} items\n     * @return {?}\n     */\n    _getOwnDefs(items) {\n        return items.filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => !item._table || item._table === this));\n    }\n}\nCdkTable.ɵfac = function CdkTable_Factory(t) { return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform)); };\nCdkTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n    } }, viewQuery: function CdkTable_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(DataRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(HeaderRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(FooterRowOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\n    } }, hostAttrs: [1, \"cdk-table\"], inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\" }, exportAs: [\"cdkTable\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_TABLE, useExisting: CdkTable }])], ngContentSelectors: _c1, decls: 4, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function CdkTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, 0);\n        ɵngcc0.ɵɵelementContainer(2, 1);\n        ɵngcc0.ɵɵelementContainer(3, 2);\n    } }, directives: [HeaderRowOutlet,\n        DataRowOutlet,\n        FooterRowOutlet], encapsulation: 2 });\n/** @nocollapse */\nCdkTable.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\nCdkTable.propDecorators = {\n    trackBy: [{ type: Input }],\n    dataSource: [{ type: Input }],\n    multiTemplateDataRows: [{ type: Input }],\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef, { descendants: true },] }],\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef, { descendants: true },] }],\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef, {\n                    descendants: true\n                },] }],\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef, {\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTable, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-table, table[cdk-table]',\n                exportAs: 'cdkTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'cdk-table'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\n                // The view for `MatTable` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                providers: [{ provide: CDK_TABLE, useExisting: CdkTable }]\n            }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['role']\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, { trackBy: [{\n            type: Input\n        }], dataSource: [{\n            type: Input\n        }], multiTemplateDataRows: [{\n            type: Input\n        }], _rowOutlet: [{\n            type: ViewChild,\n            args: [DataRowOutlet, { static: true }]\n        }], _headerRowOutlet: [{\n            type: ViewChild,\n            args: [HeaderRowOutlet, { static: true }]\n        }], _footerRowOutlet: [{\n            type: ViewChild,\n            args: [FooterRowOutlet, { static: true }]\n        }], _contentColumnDefs: [{\n            type: ContentChildren,\n            args: [CdkColumnDef, { descendants: true }]\n        }], _contentRowDefs: [{\n            type: ContentChildren,\n            args: [CdkRowDef, { descendants: true }]\n        }], _contentHeaderRowDefs: [{\n            type: ContentChildren,\n            args: [CdkHeaderRowDef, {\n                    descendants: true\n                }]\n        }], _contentFooterRowDefs: [{\n            type: ContentChildren,\n            args: [CdkFooterRowDef, {\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTable.ngAcceptInputType_multiTemplateDataRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._document;\n    /**\n     * Latest data provided by the data source.\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._data;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._onDestroy;\n    /**\n     * List of the rendered rows as identified by their `RenderRow` object.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._renderRows;\n    /**\n     * Subscription that listens for the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._renderChangeSubscription;\n    /**\n     * Map of all the user's defined columns (header, data, and footer cell template) identified by\n     * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n     * any custom column definitions added to `_customColumnDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._columnDefsByName;\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to `_customRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._rowDefs;\n    /**\n     * Set of all header row definitions that can be used by this table. Populated by the rows\n     * gathered by using `ContentChildren` as well as any custom row definitions added to\n     * `_customHeaderRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._headerRowDefs;\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to\n     * `_customFooterRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._footerRowDefs;\n    /**\n     * Differ used to find the changes in the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._dataDiffer;\n    /**\n     * Stores the row definition that does not have a when predicate.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._defaultRowDef;\n    /**\n     * Column definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * column definitions as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customColumnDefs;\n    /**\n     * Data row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in data rows as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customRowDefs;\n    /**\n     * Header row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in header rows as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customHeaderRowDefs;\n    /**\n     * Footer row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n     * built-in footer row as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customFooterRowDefs;\n    /**\n     * Whether the header row definition has been changed. Triggers an update to the header row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._headerRowDefChanged;\n    /**\n     * Whether the footer row definition has been changed. Triggers an update to the footer row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._footerRowDefChanged;\n    /**\n     * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n     * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n     * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n     * and row template matches, which allows the `IterableDiffer` to check rows by reference\n     * and understand which rows are added/moved/removed.\n     *\n     * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n     * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n     * contains an array of created pairs. The array is necessary to handle cases where the data\n     * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n     * stored.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._cachedRenderRowsMap;\n    /**\n     * Whether the table is applied to a native `<table>`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._isNativeHtmlTable;\n    /**\n     * Utility class that is responsible for applying the appropriate sticky positioning styles to\n     * the table's rows and cells.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._stickyStyler;\n    /**\n     * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n     * table subclasses.\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype.stickyCssClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._trackByFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._dataSource;\n    /** @type {?} */\n    CdkTable.prototype._multiTemplateDataRows;\n    /**\n     * Stream containing the latest information on what rows are being displayed on screen.\n     * Can be used by the data source to as a heuristic of what data should be provided.\n     *\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTable.prototype.viewChange;\n    /** @type {?} */\n    CdkTable.prototype._rowOutlet;\n    /** @type {?} */\n    CdkTable.prototype._headerRowOutlet;\n    /** @type {?} */\n    CdkTable.prototype._footerRowOutlet;\n    /**\n     * The column definitions provided by the user that contain what the header, data, and footer\n     * cells should render for each column.\n     * @type {?}\n     */\n    CdkTable.prototype._contentColumnDefs;\n    /**\n     * Set of data row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentRowDefs;\n    /**\n     * Set of header row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentHeaderRowDefs;\n    /**\n     * Set of footer row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentFooterRowDefs;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._differs;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._platform;\n}\n/**\n * Utility function that gets a merged list of the entries in an array and values of a Set.\n * @template T\n * @param {?} array\n * @param {?} set\n * @return {?}\n */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/text-column.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass CdkTextColumn {\n    /**\n     * @param {?} _table\n     * @param {?} _options\n     */\n    constructor(_table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /**\n         * Alignment of the cell values.\n         */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /**\n     * Column name that should be used to reference this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((/**\n                 * @param {?} data\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (data, name) => ((/** @type {?} */ (data)))[name]));\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     * @return {?}\n     */\n    _createDefaultHeaderText() {\n        /** @type {?} */\n        const name = this.name;\n        if (isDevMode() && !name) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /**\n     * Synchronizes the column definition name with the text column name.\n     * @private\n     * @return {?}\n     */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8)); };\nCdkTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], viewQuery: function CdkTextColumn_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkColumnDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkCellDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkHeaderCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n    } }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, decls: 3, vars: 0, consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]], template: function CdkTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [CdkColumnDef,\n        CdkHeaderCellDef,\n        CdkCellDef,\n        CdkHeaderCell,\n        CdkCell], encapsulation: 2 });\n/** @nocollapse */\nCdkTextColumn.ctorParameters = () => [\n    { type: CdkTable, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\n];\nCdkTextColumn.propDecorators = {\n    name: [{ type: Input }],\n    headerText: [{ type: Input }],\n    dataAccessor: [{ type: Input }],\n    justify: [{ type: Input }],\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-text-column',\n                template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: CdkTable, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [TEXT_COLUMN_OPTIONS]\n            }] }]; }, { justify: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], headerText: [{\n            type: Input\n        }], dataAccessor: [{\n            type: Input\n        }], columnDef: [{\n            type: ViewChild,\n            args: [CdkColumnDef, { static: true }]\n        }], cell: [{\n            type: ViewChild,\n            args: [CdkCellDef, { static: true }]\n        }], headerCell: [{\n            type: ViewChild,\n            args: [CdkHeaderCellDef, { static: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTextColumn.prototype._name;\n    /**\n     * Text label that should be used for the column header. If this property is not\n     * set, the header text will default to the column name with its first letter capitalized.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.headerText;\n    /**\n     * Accessor function to retrieve the data rendered for each cell. If this\n     * property is not set, the data cells will render the value found in the data's property matching\n     * the column's name. For example, if the column is named `id`, then the rendered value will be\n     * value defined by the data's `id` property.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.dataAccessor;\n    /**\n     * Alignment of the cell values.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.justify;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.columnDef;\n    /**\n     * The column cell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.cell;\n    /**\n     * The column headerCell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.headerCell;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextColumn.prototype._table;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextColumn.prototype._options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkTableModule });\nCdkTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, { declarations: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn], exports: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, STICKY_DIRECTIONS, StickyStyler, TEXT_COLUMN_OPTIONS, mixinHasStickyInput };\n\n//# sourceMappingURL=table.js.map","import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, SkipSelf, Inject, ChangeDetectorRef, ViewContainerRef, Input, Output, ContentChild, ViewChild, Host, ElementRef, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, hasModifierKey, SPACE, HOME, END } from '@angular/cdk/keycodes';\nimport { distinctUntilChanged, startWith, filter, take } from 'rxjs/operators';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, group, query, animateChild } from '@angular/animations';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/accordion-base.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base interface for a `MatAccordion`.\n * \\@docs-private\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\n\nconst _c0 = [\"body\"];\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) { }\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\nconst _c3 = function (a0, a1) { return { collapsedHeight: a0, expandedHeight: a1 }; };\nconst _c4 = function (a0, a1) { return { value: a0, params: a1 }; };\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n} }\nconst _c5 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c6 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nfunction MatAccordionBase() { }\nif (false) {\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @type {?}\n     */\n    MatAccordionBase.prototype.hideToggle;\n    /**\n     * Display mode used for all expansion panels in the accordion.\n     * @type {?}\n     */\n    MatAccordionBase.prototype.displayMode;\n    /**\n     * The position of the expansion indicator.\n     * @type {?}\n     */\n    MatAccordionBase.prototype.togglePosition;\n    /**\n     * Handles keyboard events coming in from the panel headers.\n     * @type {?}\n     */\n    MatAccordionBase.prototype._handleHeaderKeydown;\n    /**\n     * Handles focus events on the panel headers.\n     * @type {?}\n     */\n    MatAccordionBase.prototype._handleHeaderFocus;\n}\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n * @type {?}\n */\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time and timing curve for expansion panel animations.\n * @type {?}\n */\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * \\@docs-private\n * @type {?}\n */\nconst matExpansionAnimations = {\n    /**\n     * Animation that rotates the indicator arrow.\n     */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /**\n     * Animation that expands and collapses the panel header height.\n     */\n    expansionHeaderHeight: trigger('expansionHeight', [\n        state('collapsed, void', style({\n            height: '{{collapsedHeight}}',\n        }), {\n            params: { collapsedHeight: '48px' },\n        }),\n        state('expanded', style({\n            height: '{{expandedHeight}}'\n        }), {\n            params: { expandedHeight: '64px' }\n        }),\n        transition('expanded <=> collapsed, void => collapsed', group([\n            query('@indicatorRotate', animateChild(), { optional: true }),\n            animate(EXPANSION_PANEL_ANIMATION_TIMING),\n        ])),\n    ]),\n    /**\n     * Animation that expands and collapses the panel content.\n     */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-panel-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    /**\n     * @param {?} _template\n     */\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) { return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatExpansionPanelContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelContent, selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]] });\n/** @nocollapse */\nMatExpansionPanelContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matExpansionPanelContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatExpansionPanelContent.prototype._template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-panel.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Counter for generating unique element ids.\n * @type {?}\n */\nlet uniqueId = 0;\n/**\n * Object that can be used to override the default options\n * for all of the expansion panels in a module.\n * @record\n */\nfunction MatExpansionPanelDefaultOptions() { }\nif (false) {\n    /**\n     * Height of the header while the panel is expanded.\n     * @type {?}\n     */\n    MatExpansionPanelDefaultOptions.prototype.expandedHeight;\n    /**\n     * Height of the header while the panel is collapsed.\n     * @type {?}\n     */\n    MatExpansionPanelDefaultOptions.prototype.collapsedHeight;\n    /**\n     * Whether the toggle indicator should be hidden.\n     * @type {?}\n     */\n    MatExpansionPanelDefaultOptions.prototype.hideToggle;\n}\n/**\n * Injection token that can be used to configure the defalt\n * options for the expansion panel component.\n * @type {?}\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\nconst ɵ0 = undefined;\n/**\n * `<mat-expansion-panel>`\n *\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    /**\n     * @param {?} accordion\n     * @param {?} _changeDetectorRef\n     * @param {?} _uniqueSelectionDispatcher\n     * @param {?} _viewContainerRef\n     * @param {?} _document\n     * @param {?} _animationMode\n     * @param {?=} defaultOptions\n     */\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /**\n         * An event emitted after the body's expansion animation happens.\n         */\n        this.afterExpand = new EventEmitter();\n        /**\n         * An event emitted after the body's collapse animation happens.\n         */\n        this.afterCollapse = new EventEmitter();\n        /**\n         * Stream that emits for changes in `\\@Input` properties.\n         */\n        this._inputChanges = new Subject();\n        /**\n         * ID for the associated header element. Used for a11y labelling.\n         */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        /**\n         * Stream of body animation done events.\n         */\n        this._bodyAnimationDone = new Subject();\n        this.accordion = accordion;\n        this._document = _document;\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._bodyAnimationDone.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (event.fromState !== 'void') {\n                if (event.toState === 'expanded') {\n                    this.afterExpand.emit();\n                }\n                else if (event.toState === 'collapsed') {\n                    this.afterCollapse.emit();\n                }\n            }\n        }));\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /**\n     * Whether the toggle indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /**\n     * The position of the expansion indicator.\n     * @return {?}\n     */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    /**\n     * Determines whether the expansion panel should have spacing between it and its siblings.\n     * @return {?}\n     */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /**\n     * Gets the expanded state string.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /**\n     * Toggles the expanded state of the expansion panel.\n     * @return {?}\n     */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /**\n     * Sets the expanded state of the expansion panel to false.\n     * @return {?}\n     */\n    close() {\n        this.expanded = false;\n    }\n    /**\n     * Sets the expanded state of the expansion panel to true.\n     * @return {?}\n     */\n    open() {\n        this.expanded = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened.pipe(startWith((/** @type {?} */ (null))), filter((/**\n             * @return {?}\n             */\n            () => this.expanded && !this._portal)), take(1)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            }));\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._bodyAnimationDone.complete();\n        this._inputChanges.complete();\n    }\n    /**\n     * Checks whether the expansion panel's content contains the currently-focused element.\n     * @return {?}\n     */\n    _containsFocus() {\n        if (this._body) {\n            /** @type {?} */\n            const focusedElement = this._document.activeElement;\n            /** @type {?} */\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n}\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) { return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanel.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanel, selectors: [[\"mat-expansion-panel\"]], contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    } }, viewQuery: function MatExpansionPanel_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    } }, hostAttrs: [1, \"mat-expansion-panel\"], hostVars: 6, hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    } }, inputs: { disabled: \"disabled\", expanded: \"expanded\", hideToggle: \"hideToggle\", togglePosition: \"togglePosition\" }, outputs: { opened: \"opened\", closed: \"closed\", expandedChange: \"expandedChange\", afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, exportAs: [\"matExpansionPanel\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: ɵ0 },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c2, decls: 7, vars: 4, consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]], template: function MatExpansionPanel_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) { return ctx._bodyAnimationDone.next($event); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matExpansionAnimations.bodyExpansion] }, changeDetection: 0 });\n/** @nocollapse */\nMatExpansionPanel.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [MAT_ACCORDION,] }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanel.propDecorators = {\n    hideToggle: [{ type: Input }],\n    togglePosition: [{ type: Input }],\n    afterExpand: [{ type: Output }],\n    afterCollapse: [{ type: Output }],\n    _lazyContent: [{ type: ContentChild, args: [MatExpansionPanelContent,] }],\n    _body: [{ type: ViewChild, args: ['body',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel',\n                exportAs: 'matExpansionPanel',\n                template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled', 'expanded'],\n                outputs: ['opened', 'closed', 'expandedChange'],\n                animations: [matExpansionAnimations.bodyExpansion],\n                providers: [\n                    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                    // to the same accordion.\n                    { provide: MAT_ACCORDION, useValue: ɵ0 },\n                ],\n                host: {\n                    'class': 'mat-expansion-panel',\n                    '[class.mat-expanded]': 'expanded',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n                },\n                styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [MAT_ACCORDION]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { afterExpand: [{\n            type: Output\n        }], afterCollapse: [{\n            type: Output\n        }], hideToggle: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], _lazyContent: [{\n            type: ContentChild,\n            args: [MatExpansionPanelContent]\n        }], _body: [{\n            type: ViewChild,\n            args: ['body']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatExpansionPanel.ngAcceptInputType_hideToggle;\n    /** @type {?} */\n    MatExpansionPanel.ngAcceptInputType_expanded;\n    /** @type {?} */\n    MatExpansionPanel.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._hideToggle;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._togglePosition;\n    /**\n     * An event emitted after the body's expansion animation happens.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype.afterExpand;\n    /**\n     * An event emitted after the body's collapse animation happens.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype.afterCollapse;\n    /**\n     * Stream that emits for changes in `\\@Input` properties.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._inputChanges;\n    /**\n     * Optionally defined accordion the expansion panel belongs to.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype.accordion;\n    /**\n     * Content that will be rendered lazily.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._lazyContent;\n    /**\n     * Element containing the panel's user-provided content.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._body;\n    /**\n     * Portal holding the user's content.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._portal;\n    /**\n     * ID for the associated header element. Used for a11y labelling.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._headerId;\n    /**\n     * Stream of body animation done events.\n     * @type {?}\n     */\n    MatExpansionPanel.prototype._bodyAnimationDone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanel.prototype._viewContainerRef;\n    /** @type {?} */\n    MatExpansionPanel.prototype._animationMode;\n}\nclass MatExpansionPanelActionRow {\n}\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) { return new (t || MatExpansionPanelActionRow)(); };\nMatExpansionPanelActionRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelActionRow, selectors: [[\"mat-action-row\"]], hostAttrs: [1, \"mat-action-row\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-action-row',\n                host: {\n                    class: 'mat-action-row'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-panel-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * `<mat-expansion-panel-header>`\n *\n * This component corresponds to the header element of an `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n    /**\n     * @param {?} panel\n     * @param {?} _element\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultOptions\n     */\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions) {\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        /**\n         * Whether Angular animations in the panel header should be disabled.\n         */\n        this._animationsDisabled = true;\n        /** @type {?} */\n        const accordionHideToggleChange = panel.accordion ?\n            panel.accordion._stateChanges.pipe(filter((/**\n             * @param {?} changes\n             * @return {?}\n             */\n            changes => !!(changes['hideToggle'] || changes['togglePosition'])))) :\n            EMPTY;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription =\n            merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter((/**\n             * @param {?} changes\n             * @return {?}\n             */\n            changes => {\n                return !!(changes['hideToggle'] ||\n                    changes['disabled'] ||\n                    changes['togglePosition']);\n            }))))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter((/**\n         * @return {?}\n         */\n        () => panel._containsFocus())))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => _focusMonitor.focusVia(_element, 'program')));\n        _focusMonitor.monitor(_element).subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        origin => {\n            if (origin && panel.accordion) {\n                panel.accordion._handleHeaderFocus(this);\n            }\n        }));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _animationStarted() {\n        // Currently the `expansionHeight` animation has a `void => collapsed` transition which is\n        // there to work around a bug in Angular (see #13088), however this introduces a different\n        // issue. The new transition will cause the header to animate in on init (see #16067), if the\n        // consumer has set a header height that is different from the default one. We work around it\n        // by disabling animations on the header and re-enabling them after the first animation has run.\n        // Note that Angular dispatches animation events even if animations are disabled. Ideally this\n        // wouldn't be necessary if we remove the `void => collapsed` transition, but we have to wait\n        // for https://github.com/angular/angular/issues/18847 to be resolved.\n        this._animationsDisabled = false;\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /**\n     * Toggles the expanded state of the panel.\n     * @return {?}\n     */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /**\n     * Gets whether the panel is expanded.\n     * @return {?}\n     */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /**\n     * Gets the expanded state string of the panel.\n     * @return {?}\n     */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /**\n     * Gets the panel id.\n     * @return {?}\n     */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /**\n     * Gets the toggle position for the header.\n     * @return {?}\n     */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /**\n     * Gets whether the expand indicator should be shown.\n     * @return {?}\n     */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Handle keydown event calling to toggle() if appropriate.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * \\@docs-private\n     * @param {?=} origin Origin of the action that triggered the focus.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._element, origin, options);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n}\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) { return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanelHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanelHeader, selectors: [[\"mat-expansion-panel-header\"]], hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\", \"mat-focus-indicator\"], hostVars: 19, hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵcomponentHostSyntheticListener(\"@expansionHeight.start\", function MatExpansionPanelHeader_animation_expansionHeight_start_HostBindingHandler() { return ctx._animationStarted(); });\n        ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() { return ctx._toggle(); })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.disabled ? 0 - 1 : 0)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n        ɵngcc0.ɵɵupdateSyntheticHostBinding(\"@.disabled\", ctx._animationsDisabled)(\"@expansionHeight\", ɵngcc0.ɵɵpureFunction2(16, _c4, ctx._getExpandedState(), ɵngcc0.ɵɵpureFunction2(13, _c3, ctx.collapsedHeight, ctx.expandedHeight)));\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded())(\"mat-expansion-toggle-indicator-after\", ctx._getTogglePosition() === \"after\")(\"mat-expansion-toggle-indicator-before\", ctx._getTogglePosition() === \"before\");\n    } }, inputs: { expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\" }, ngContentSelectors: _c6, decls: 5, vars: 1, consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]], template: function MatExpansionPanelHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    } }, directives: [ɵngcc4.NgIf], styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;position:relative}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"], encapsulation: 2, data: { animation: [\n            matExpansionAnimations.indicatorRotate,\n            matExpansionAnimations.expansionHeaderHeight\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatExpansionPanelHeader.ctorParameters = () => [\n    { type: MatExpansionPanel, decorators: [{ type: Host }] },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanelHeader.propDecorators = {\n    expandedHeight: [{ type: Input }],\n    collapsedHeight: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel-header',\n                template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [\n                    matExpansionAnimations.indicatorRotate,\n                    matExpansionAnimations.expansionHeaderHeight\n                ],\n                host: {\n                    'class': 'mat-expansion-panel-header mat-focus-indicator',\n                    'role': 'button',\n                    '[attr.id]': 'panel._headerId',\n                    '[attr.tabindex]': 'disabled ? -1 : 0',\n                    '[attr.aria-controls]': '_getPanelId()',\n                    '[attr.aria-expanded]': '_isExpanded()',\n                    '[attr.aria-disabled]': 'panel.disabled',\n                    '[class.mat-expanded]': '_isExpanded()',\n                    '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                    '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                    '(click)': '_toggle()',\n                    '(keydown)': '_keydown($event)',\n                    '[@.disabled]': '_animationsDisabled',\n                    '(@expansionHeight.start)': '_animationStarted()',\n                    '[@expansionHeight]': `{\n        value: _getExpandedState(),\n        params: {\n          collapsedHeight: collapsedHeight,\n          expandedHeight: expandedHeight\n        }\n    }`\n                },\n                styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;position:relative}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"]\n            }]\n    }], function () { return [{ type: MatExpansionPanel, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { expandedHeight: [{\n            type: Input\n        }], collapsedHeight: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._parentChangeSubscription;\n    /**\n     * Whether Angular animations in the panel header should be disabled.\n     * @type {?}\n     */\n    MatExpansionPanelHeader.prototype._animationsDisabled;\n    /**\n     * Height of the header while the panel is expanded.\n     * @type {?}\n     */\n    MatExpansionPanelHeader.prototype.expandedHeight;\n    /**\n     * Height of the header while the panel is collapsed.\n     * @type {?}\n     */\n    MatExpansionPanelHeader.prototype.collapsedHeight;\n    /** @type {?} */\n    MatExpansionPanelHeader.prototype.panel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatExpansionPanelHeader.prototype._changeDetectorRef;\n}\n/**\n * `<mat-panel-description>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelDescription {\n}\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) { return new (t || MatExpansionPanelDescription)(); };\nMatExpansionPanelDescription.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelDescription, selectors: [[\"mat-panel-description\"]], hostAttrs: [1, \"mat-expansion-panel-header-description\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-description',\n                host: {\n                    class: 'mat-expansion-panel-header-description'\n                }\n            }]\n    }], null, null); })();\n/**\n * `<mat-panel-title>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nclass MatExpansionPanelTitle {\n}\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) { return new (t || MatExpansionPanelTitle)(); };\nMatExpansionPanelTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelTitle, selectors: [[\"mat-panel-title\"]], hostAttrs: [1, \"mat-expansion-panel-header-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-title',\n                host: {\n                    class: 'mat-expansion-panel-header-title'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/accordion.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        /**\n         * Headers belonging to this accordion.\n         */\n        this._ownHeaders = new QueryList();\n        this._hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n        /**\n         * The position of the expansion indicator.\n         */\n        this.togglePosition = 'after';\n    }\n    /**\n     * Whether the expansion indicator should be hidden.\n     * @return {?}\n     */\n    get hideToggle() { return this._hideToggle; }\n    /**\n     * @param {?} show\n     * @return {?}\n     */\n    set hideToggle(show) { this._hideToggle = coerceBooleanProperty(show); }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((/**\n         * @param {?} headers\n         * @return {?}\n         */\n        (headers) => {\n            this._ownHeaders.reset(headers.filter((/**\n             * @param {?} header\n             * @return {?}\n             */\n            header => header.panel.accordion === this)));\n            this._ownHeaders.notifyOnChanges();\n        }));\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap();\n    }\n    /**\n     * Handles keyboard events coming in from the panel headers.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleHeaderKeydown(event) {\n        const { keyCode } = event;\n        /** @type {?} */\n        const manager = this._keyManager;\n        if (keyCode === HOME) {\n            if (!hasModifierKey(event)) {\n                manager.setFirstItemActive();\n                event.preventDefault();\n            }\n        }\n        else if (keyCode === END) {\n            if (!hasModifierKey(event)) {\n                manager.setLastItemActive();\n                event.preventDefault();\n            }\n        }\n        else {\n            this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * @param {?} header\n     * @return {?}\n     */\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n}\nMatAccordion.ɵfac = function MatAccordion_Factory(t) { return ɵMatAccordion_BaseFactory(t || MatAccordion); };\nMatAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAccordion, selectors: [[\"mat-accordion\"]], contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    } }, hostAttrs: [1, \"mat-accordion\"], hostVars: 2, hostBindings: function MatAccordion_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-accordion-multi\", ctx.multi);\n    } }, inputs: { multi: \"multi\", displayMode: \"displayMode\", togglePosition: \"togglePosition\", hideToggle: \"hideToggle\" }, exportAs: [\"matAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatAccordion.propDecorators = {\n    _headers: [{ type: ContentChildren, args: [MatExpansionPanelHeader, { descendants: true },] }],\n    hideToggle: [{ type: Input }],\n    displayMode: [{ type: Input }],\n    togglePosition: [{ type: Input }]\n};\nconst ɵMatAccordion_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatAccordion);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-accordion',\n                exportAs: 'matAccordion',\n                inputs: ['multi'],\n                providers: [{\n                        provide: MAT_ACCORDION,\n                        useExisting: MatAccordion\n                    }],\n                host: {\n                    class: 'mat-accordion',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if multiple panel support is enabled.\n                    '[class.mat-accordion-multi]': 'this.multi'\n                }\n            }]\n    }], null, { displayMode: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], hideToggle: [{\n            type: Input\n        }], _headers: [{\n            type: ContentChildren,\n            args: [MatExpansionPanelHeader, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatAccordion.ngAcceptInputType_hideToggle;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAccordion.prototype._keyManager;\n    /**\n     * Headers belonging to this accordion.\n     * @type {?}\n     * @private\n     */\n    MatAccordion.prototype._ownHeaders;\n    /**\n     * All headers inside the accordion. Includes headers inside nested accordions.\n     * @type {?}\n     */\n    MatAccordion.prototype._headers;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAccordion.prototype._hideToggle;\n    /**\n     * Display mode used for all expansion panels in the accordion. Currently two display\n     * modes exist:\n     *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n     *     panel at a different elevation from the rest of the accordion.\n     *  flat - no spacing is placed around expanded panels, showing all panels at the same\n     *     elevation.\n     * @type {?}\n     */\n    MatAccordion.prototype.displayMode;\n    /**\n     * The position of the expansion indicator.\n     * @type {?}\n     */\n    MatAccordion.prototype.togglePosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/expansion-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatExpansionModule {\n}\nMatExpansionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatExpansionModule });\nMatExpansionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatExpansionModule_Factory(t) { return new (t || MatExpansionModule)(); }, imports: [[CommonModule, CdkAccordionModule, PortalModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, { declarations: function () { return [MatAccordion,\n        MatExpansionPanel,\n        MatExpansionPanelActionRow,\n        MatExpansionPanelHeader,\n        MatExpansionPanelTitle,\n        MatExpansionPanelDescription,\n        MatExpansionPanelContent]; }, imports: function () { return [CommonModule, CdkAccordionModule, PortalModule]; }, exports: function () { return [MatAccordion,\n        MatExpansionPanel,\n        MatExpansionPanelActionRow,\n        MatExpansionPanelHeader,\n        MatExpansionPanelTitle,\n        MatExpansionPanelDescription,\n        MatExpansionPanelContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, CdkAccordionModule, PortalModule],\n                exports: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ],\n                declarations: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/expansion/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations };\n\n//# sourceMappingURL=expansion.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Input, ElementRef, NgModule } from '@angular/core';\nimport { CdkTable, CDK_TABLE_TEMPLATE, CDK_TABLE, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, Subscription, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/table';\n\nconst _c0 = [[[\"caption\"]]];\nconst _c1 = [\"caption\"];\nfunction MatTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n} }\nfunction MatTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r1.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.dataAccessor(data_r2, ctx_r1.name), \" \");\n} }\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /**\n         * Overrides the sticky CSS class set by the `CdkTable`.\n         */\n        this.stickyCssClass = 'mat-table-sticky';\n    }\n}\nMatTable.ɵfac = function MatTable_Factory(t) { return ɵMatTable_BaseFactory(t || MatTable); };\nMatTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTable, selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]], hostAttrs: [1, \"mat-table\"], exportAs: [\"matTable\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkTable, useExisting: MatTable },\n            { provide: CDK_TABLE, useExisting: MatTable }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function MatTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, 0);\n        ɵngcc0.ɵɵelementContainer(2, 1);\n        ɵngcc0.ɵɵelementContainer(3, 2);\n    } }, directives: [ɵngcc1.HeaderRowOutlet, ɵngcc1.DataRowOutlet, ɵngcc1.FooterRowOutlet], styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\\n\"], encapsulation: 2 });\nconst ɵMatTable_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTable);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTable, [{\n        type: Component,\n        args: [{\n                selector: 'mat-table, table[mat-table]',\n                exportAs: 'matTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'mat-table'\n                },\n                providers: [\n                    { provide: CdkTable, useExisting: MatTable },\n                    { provide: CDK_TABLE, useExisting: MatTable }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\\n\"]\n            }]\n    }], null, null); })();\nif (false) {\n    /**\n     * Overrides the sticky CSS class set by the `CdkTable`.\n     * @type {?}\n     * @protected\n     */\n    MatTable.prototype.stickyCssClass;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/cell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ɵfac = function MatCellDef_Factory(t) { return ɵMatCellDef_BaseFactory(t || MatCellDef); };\nMatCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCellDef, selectors: [[\"\", \"matCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkCellDef, useExisting: MatCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matCellDef]',\n                providers: [{ provide: CdkCellDef, useExisting: MatCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = function MatHeaderCellDef_Factory(t) { return ɵMatHeaderCellDef_BaseFactory(t || MatHeaderCellDef); };\nMatHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCellDef, selectors: [[\"\", \"matHeaderCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderCellDef]',\n                providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = function MatFooterCellDef_Factory(t) { return ɵMatFooterCellDef_BaseFactory(t || MatFooterCellDef); };\nMatFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCellDef, selectors: [[\"\", \"matFooterCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterCellDef]',\n                providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n}\nMatColumnDef.ɵfac = function MatColumnDef_Factory(t) { return ɵMatColumnDef_BaseFactory(t || MatColumnDef); };\nMatColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatColumnDef, selectors: [[\"\", \"matColumnDef\", \"\"]], inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkColumnDef, useExisting: MatColumnDef },\n            { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['matColumnDef',] }]\n};\nconst ɵMatColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatColumnDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matColumnDef]',\n                inputs: ['sticky'],\n                providers: [\n                    { provide: CdkColumnDef, useExisting: MatColumnDef },\n                    { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n                ]\n            }]\n    }], null, { name: [{\n            type: Input,\n            args: ['matColumnDef']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatColumnDef.ngAcceptInputType_sticky;\n    /**\n     * Unique name for this column.\n     * @type {?}\n     */\n    MatColumnDef.prototype.name;\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass MatHeaderCell extends CdkHeaderCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatHeaderCell.ɵfac = function MatHeaderCell_Factory(t) { return new (t || MatHeaderCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCell, selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"mat-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-header-cell, th[mat-header-cell]',\n                host: {\n                    'class': 'mat-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass MatFooterCell extends CdkFooterCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatFooterCell.ɵfac = function MatFooterCell_Factory(t) { return new (t || MatFooterCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCell, selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-footer-cell, td[mat-footer-cell]',\n                host: {\n                    'class': 'mat-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Cell template container that adds the right classes and role.\n */\nclass MatCell extends CdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatCell.ɵfac = function MatCell_Factory(t) { return new (t || MatCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCell, selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-cell, td[mat-cell]',\n                host: {\n                    'class': 'mat-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/row.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = function MatHeaderRowDef_Factory(t) { return ɵMatHeaderRowDef_BaseFactory(t || MatHeaderRowDef); };\nMatHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderRowDef, selectors: [[\"\", \"matHeaderRowDef\", \"\"]], inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderRowDef]',\n                providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky']\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatHeaderRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = function MatFooterRowDef_Factory(t) { return ɵMatFooterRowDef_BaseFactory(t || MatFooterRowDef); };\nMatFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterRowDef, selectors: [[\"\", \"matFooterRowDef\", \"\"]], inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterRowDef]',\n                providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky']\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatFooterRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ɵfac = function MatRowDef_Factory(t) { return ɵMatRowDef_BaseFactory(t || MatRowDef); };\nMatRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRowDef, selectors: [[\"\", \"matRowDef\", \"\"]], inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRowDef, useExisting: MatRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matRowDef]',\n                providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen']\n            }]\n    }], null, null); })();\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = function MatHeaderRow_Factory(t) { return ɵMatHeaderRow_BaseFactory(t || MatHeaderRow); };\nMatHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatHeaderRow, selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-header-row\"], exportAs: [\"matHeaderRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatHeaderRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-header-row, tr[mat-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matHeaderRow',\n                providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = function MatFooterRow_Factory(t) { return ɵMatFooterRow_BaseFactory(t || MatFooterRow); };\nMatFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFooterRow, selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-footer-row\"], exportAs: [\"matFooterRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRow, useExisting: MatFooterRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatFooterRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-footer-row, tr[mat-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matFooterRow',\n                providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }]\n            }]\n    }], null, null); })();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = function MatRow_Factory(t) { return ɵMatRow_BaseFactory(t || MatRow); };\nMatRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRow, selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-row\"], exportAs: [\"matRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRow, useExisting: MatRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-row, tr[mat-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRow',\n                providers: [{ provide: CdkRow, useExisting: MatRow }]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/text-column.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ɵfac = function MatTextColumn_Factory(t) { return ɵMatTextColumn_BaseFactory(t || MatTextColumn); };\nMatTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTextColumn, selectors: [[\"mat-text-column\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 0, consts: [[\"matColumnDef\", \"\"], [\"mat-header-cell\", \"\", 3, \"text-align\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"text-align\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"]], template: function MatTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, MatTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [MatColumnDef,\n        MatHeaderCellDef,\n        MatCellDef,\n        MatHeaderCell,\n        MatCell], encapsulation: 2 });\nconst ɵMatTextColumn_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextColumn);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'mat-text-column',\n                template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTableModule });\nMatTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTableModule_Factory(t) { return new (t || MatTableModule)(); }, imports: [[\n            CdkTableModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableModule, { declarations: function () { return [MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; }, imports: function () { return [CdkTableModule,\n        MatCommonModule]; }, exports: function () { return [MatCommonModule,\n        MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CdkTableModule,\n                    MatCommonModule,\n                ],\n                exports: [MatCommonModule, EXPORTED_DECLARATIONS],\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n * @type {?}\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n * @template T\n */\nclass MatTableDataSource extends DataSource {\n    /**\n     * @param {?=} initialData\n     */\n    constructor(initialData = []) {\n        super();\n        /**\n         * Stream emitting render data to the table (depends on ordered data changes).\n         */\n        this._renderData = new BehaviorSubject([]);\n        /**\n         * Stream that emits when a new filter string is set on the data source.\n         */\n        this._filter = new BehaviorSubject('');\n        /**\n         * Used to react to internal changes of the paginator that are made by the data source itself.\n         */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = Subscription.EMPTY;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (/**\n         * @param {?} data\n         * @param {?} sortHeaderId\n         * @return {?}\n         */\n        (data, sortHeaderId) => {\n            /** @type {?} */\n            const value = ((/** @type {?} */ (data)))[sortHeaderId];\n            if (_isNumberValue(value)) {\n                /** @type {?} */\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        });\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (/**\n         * @param {?} data\n         * @param {?} sort\n         * @return {?}\n         */\n        (data, sort) => {\n            /** @type {?} */\n            const active = sort.active;\n            /** @type {?} */\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                /** @type {?} */\n                let valueA = this.sortingDataAccessor(a, active);\n                /** @type {?} */\n                let valueB = this.sortingDataAccessor(b, active);\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                /** @type {?} */\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            }));\n        });\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @return Whether the filter matches against the data\n         */\n        this.filterPredicate = (/**\n         * @param {?} data\n         * @param {?} filter\n         * @return {?}\n         */\n        (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            /** @type {?} */\n            const dataStr = Object.keys(data).reduce((/**\n             * @param {?} currentTerm\n             * @param {?} key\n             * @return {?}\n             */\n            (currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + ((/** @type {?} */ (data)))[key] + '◬';\n            }), '').toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            /** @type {?} */\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        });\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /**\n     * Array of data that should be rendered by the table, where each object represents one row.\n     * @return {?}\n     */\n    get data() { return this._data.value; }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    set data(data) { this._data.next(data); }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     * @return {?}\n     */\n    get filter() { return this._filter.value; }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    set filter(filter) { this._filter.next(filter); }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     * @return {?}\n     */\n    get sort() { return this._sort; }\n    /**\n     * @param {?} sort\n     * @return {?}\n     */\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     * @return {?}\n     */\n    get paginator() { return this._paginator; }\n    /**\n     * @param {?} paginator\n     * @return {?}\n     */\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     * @return {?}\n     */\n    _updateChangeSubscription() {\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        /** @type {?} */\n        const sortChange = this._sort ?\n            (/** @type {?} */ (merge(this._sort.sortChange, this._sort.initialized))) :\n            of(null);\n        /** @type {?} */\n        const pageChange = this._paginator ?\n            (/** @type {?} */ (merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized))) :\n            of(null);\n        /** @type {?} */\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        /** @type {?} */\n        const filteredData = combineLatest([dataStream, this._filter])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._filterData(data))));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        /** @type {?} */\n        const orderedData = combineLatest([filteredData, sortChange])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._orderData(data))));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        /** @type {?} */\n        const paginatedData = combineLatest([orderedData, pageChange])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._pageData(data))));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => this._renderData.next(data)));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            !this.filter ? data : data.filter((/**\n             * @param {?} obj\n             * @return {?}\n             */\n            obj => this.filterPredicate(obj, this.filter)));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     * @param {?} data\n     * @return {?}\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        /** @type {?} */\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     * @param {?} filteredDataLength\n     * @return {?}\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                /** @type {?} */\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                /** @type {?} */\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        }));\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * \\@docs-private\n     * @return {?}\n     */\n    connect() { return this._renderData; }\n    /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * \\@docs-private\n     * @return {?}\n     */\n    disconnect() { }\n}\nif (false) {\n    /**\n     * Stream that emits when a new data array is set on the data source.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._data;\n    /**\n     * Stream emitting render data to the table (depends on ordered data changes).\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._renderData;\n    /**\n     * Stream that emits when a new filter string is set on the data source.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._filter;\n    /**\n     * Used to react to internal changes of the paginator that are made by the data source itself.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._internalPageChanges;\n    /**\n     * Subscription to the changes that should trigger an update to the table's rendered rows, such\n     * as filtering, sorting, pagination, or base data changes.\n     * @type {?}\n     */\n    MatTableDataSource.prototype._renderChangesSubscription;\n    /**\n     * The filtered set of data that has been matched by the filter string, or all the data if there\n     * is no filter. Useful for knowing the set of data the table represents.\n     * For example, a 'selectAll()' function would likely want to select the set of filtered data\n     * shown to the user rather than all the data.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.filteredData;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._sort;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._paginator;\n    /**\n     * Data accessor function that is used for accessing data properties for sorting through\n     * the default sortData function.\n     * This default function assumes that the sort header IDs (which defaults to the column name)\n     * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n     * May be set to a custom function for different behavior.\n     * \\@param data Data object that is being accessed.\n     * \\@param sortHeaderId The name of the column that represents the data.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.sortingDataAccessor;\n    /**\n     * Gets a sorted copy of the data array based on the state of the MatSort. Called\n     * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n     * By default, the function retrieves the active sort and its direction and compares data\n     * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n     * of data ordering.\n     * \\@param data The array of data that should be sorted.\n     * \\@param sort The connected MatSort that holds the current sort state.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.sortData;\n    /**\n     * Checks if a data object matches the data source's filter string. By default, each data object\n     * is converted to a string of its properties and returns true if the filter has\n     * at least one occurrence in that string. By default, the filter string has its whitespace\n     * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n     * filter matching.\n     * \\@param data Data object used to check against the filter.\n     * \\@param filter Filter string that has been set on the data source.\n     * \\@return Whether the filter matches against the data\n     * @type {?}\n     */\n    MatTableDataSource.prototype.filterPredicate;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn };\n\n//# sourceMappingURL=table.js.map","export default \"\\n<ion-content class=\\\"spinner\\\" *ngIf=\\\"spinner\\\">\\n  <ion-spinner ></ion-spinner>\\n</ion-content>\\n\\n<ion-content *ngIf=\\\"!spinner\\\">\\n  \\n  <!-- ******************************************************************************************************** -->\\n  <div class=\\\"back-btn\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/tabs/tabs/home\\\"></ion-back-button>\\n    </ion-buttons>\\n  </div>\\n  \\n    <div class=\\\"head\\\">\\n      <!-- <div class=\\\"head\\\"  [style.background-image]=\\\"'url(' + studentData?.student?.imageUrl + ')'\\\" [ngStyle]=\\\"{ 'background-image': 'url(' + studentData?.student?.imageUrl + ')'}\\\"> -->\\n        <img [src]=\\\"studentData?.student?.imageUrl\\\" style=\\\"width: 100%;\\\">\\n    </div>\\n  \\n    <div class=\\\"stats\\\" >\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"4\\\"> \\n            <ion-card> <p>class<br> printers</p> <h6>{{ studentData?.class.students.length }}</h6> </ion-card>\\n          </ion-col>\\n          <ion-col size=\\\"4\\\"> \\n            <ion-card> <p>total<br> exames</p> <h6>{{ studentData?.class.exameDegree.length }}</h6> </ion-card>\\n          </ion-col>\\n          <ion-col size=\\\"4\\\"> \\n            <!-- <ion-card> <p>subjects</p> <h6 *ngIf=\\\"studentData\\\">{{ studentData?.class.subjects[0].termSubjects[0].classSubjects.length  +  studentData?.class.subjects[1].termSubjects[0].classSubjects.length }} </h6> </ion-card> -->\\n            <ion-card> <p>total<br> subjects</p> <h6>{{ subjectsLenght }} </h6> </ion-card>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    \\n    </div>\\n  \\n    <div class=\\\"body\\\">\\n  \\n      <ion-card>\\n        <mat-accordion>\\n          <mat-expansion-panel>\\n            <mat-expansion-panel-header>\\n              <mat-panel-title>\\n                {{ studentData?.student.name.firstname }} {{ studentData?.student.name.lastname }} \\n              </mat-panel-title>\\n              <mat-panel-description>\\n                child more Info\\n              </mat-panel-description>\\n            </mat-expansion-panel-header>\\n            <ion-label> <p>Stage</p> <span>{{ studentData?.student?.educationalStage }}</span> </ion-label>\\n            <ion-label> <p>level</p> <span>{{ studentData?.student?.level }}</span> </ion-label>\\n            <ion-label> <p>class</p> <span>{{ studentData?.class?.className }}</span> </ion-label>\\n            <ion-label> <p>email</p> <span>{{ studentData?.student?.email }}</span> </ion-label>\\n            <br>\\n            <div class=\\\"\\\">\\n            <ion-label> <p>address</p> <span>{{ studentData?.student?.address.country }} /\\n                                             {{ studentData?.student?.address.city }}    /\\n                                             {{ studentData?.student?.address.street }} </span> </ion-label>\\n            <ion-label> <p>cardId</p> <span>{{ studentData?.student?.cardId }}</span> </ion-label>\\n            <ion-label> <p>phone</p> <span>{{ studentData?.student?.phone }}</span> </ion-label>\\n            <ion-label> <p>activeAccount</p> <span>{{ studentData?.student?.activeAccount }}</span> </ion-label>\\n            <ion-label> <p>note</p> <span>{{ studentData?.student?.notes }}</span> </ion-label>\\n            </div>\\n          </mat-expansion-panel>\\n        </mat-accordion>\\n      </ion-card>    \\n  \\n      <!-- subjects info -->\\n      <ion-card>\\n        <ion-card-header>\\n          <ion-card-subtitle>subjects </ion-card-subtitle>\\n          <!-- <ion-card-title> subjects </ion-card-title>-->\\n                  <!-- Segment with anchors -->\\n          <ion-segment (ionChange)=\\\"segmentChanged($event)\\\">\\n            <ion-segment-button  value=\\\"first term\\\">\\n              <ion-label>first term</ion-label>\\n            </ion-segment-button>\\n            <ion-segment-button  value=\\\"second term\\\">\\n              <ion-label>second term</ion-label>\\n            </ion-segment-button>\\n          </ion-segment>\\n        </ion-card-header>\\n        <!-- <ion-card-content> -->\\n  \\n          <!-- //////////////////////////////////////////////////////////////////////////////////////////////// -->\\n          <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\" >\\n  \\n            <!--- Note that these columns can be defined in any order.\\n                  The actual rendered columns are set as a property on the row definition\\\" -->\\n          \\n            <!-- Position Column -->\\n            <ng-container matColumnDef=\\\"position\\\">\\n              <th mat-header-cell *matHeaderCellDef> No. </th>\\n              <td mat-cell *matCellDef=\\\"let element = index\\\"> {{element + 1}} </td>\\n            </ng-container>\\n          \\n            <!-- Name Column -->\\n            <ng-container matColumnDef=\\\"name\\\">\\n              <th mat-header-cell *matHeaderCellDef> Name </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.subjectName}} </td>\\n            </ng-container>\\n          \\n            <!-- Weight Column -->\\n            <ng-container matColumnDef=\\\"teacher\\\">\\n              <th mat-header-cell *matHeaderCellDef> teacher </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.teacher.name.firstname}} {{element.teacher.name.lastname}} </td>\\n            </ng-container>\\n          \\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n          </table>\\n  \\n        <!-- </ion-card-content> -->\\n      </ion-card>\\n  \\n      <!-- class attend info -->\\n      <ion-card>\\n        <ion-card-header class=\\\"padding\\\">\\n          <ion-card-subtitle>{{ classAttend?.length }} day attended </ion-card-subtitle>\\n          <ion-card-title> class attend </ion-card-title>\\n        </ion-card-header>\\n        <!-- <ion-card-content> -->\\n          <mat-accordion *ngFor=\\\"let month of classAllMonth \\\" style=\\\"margin-bottom: 5px !important\\\">\\n            \\n            <mat-expansion-panel style=\\\"margin-bottom: 4px;\\\">\\n              <mat-expansion-panel-header>\\n                <mat-panel-title>\\n                  {{ month }} \\n                </mat-panel-title>\\n              </mat-expansion-panel-header>\\n  \\n              <div *ngFor=\\\"let day of classTimesData\\\">\\n                <ion-label *ngIf=\\\"day.month == month \\\"> <p>{{ day.month }}</p> <span> {{ day.day }} </span> </ion-label>\\n              </div>\\n            </mat-expansion-panel>\\n          </mat-accordion>\\n  \\n          <!-- <ion-label> <p>Stage</p> <span>{{ studentData?.student?.educationalStage }}</span> </ion-label>\\n          <ul *ngFor=\\\"let month of classAllMonth \\\">\\n            <li>{{ month }} =></li>\\n          <ul *ngFor=\\\"let day of classTimesData\\\"><li *ngIf=\\\"day.month == month \\\">{{ day.day }}</li></ul> \\n  \\n          </ul> -->\\n  \\n          <!-- <br> -->\\n        <!-- </ion-card-content> -->\\n      </ion-card>\\n      \\n      <!-- bus attend info -->\\n      <ion-card>\\n        <ion-card-header class=\\\"padding\\\">\\n          <ion-card-subtitle>{{ busAttend?.length }} day attended </ion-card-subtitle>\\n          <ion-card-title> bus attend </ion-card-title>\\n        </ion-card-header>\\n        <!-- <ion-card-content> -->\\n          <mat-accordion *ngFor=\\\"let month of busAllMonth \\\" style=\\\"margin-bottom: 5px !important\\\">\\n            \\n            <mat-expansion-panel style=\\\"margin-bottom: 4px;\\\">\\n              <mat-expansion-panel-header>\\n                <mat-panel-title>\\n                  {{ month }} \\n                </mat-panel-title>\\n              </mat-expansion-panel-header>\\n  \\n              <div *ngFor=\\\"let day of busTimesData\\\">\\n                <ion-label *ngIf=\\\"day.month == month \\\"> \\n                  <p>{{ day.month }}</p> <span> {{ day.day }} </span> \\n                </ion-label>\\n              </div>\\n            </mat-expansion-panel>\\n          </mat-accordion>\\n  \\n          <!-- <ion-label> <p>Stage</p> <span>{{ studentData?.student?.educationalStage }}</span> </ion-label>\\n          <ul *ngFor=\\\"let month of classAllMonth \\\">\\n            <li>{{ month }} =></li>\\n          <ul *ngFor=\\\"let day of classTimesData\\\"><li *ngIf=\\\"day.month == month \\\">{{ day.day }}</li></ul> \\n  \\n          </ul> -->\\n  \\n          <!-- <br> -->\\n        <!-- </ion-card-content> -->\\n      </ion-card>\\n  \\n      <!-- class info -->\\n      <ion-card>\\n        <!-- <canvas baseChart \\n        [datasets]=\\\"chartData\\\" \\n        [labels]=\\\"chartLabels\\\" \\n        [options]=\\\"chartOptions\\\" \\n        [colors]=\\\"chartColors\\\"\\n        [legend]=\\\"showLegend\\\" \\n        [chartType]=\\\"chartType\\\">\\n        </canvas> -->\\n        \\n        <!-- <ion-card>\\n          <ion-card-header>\\n            <ion-card-title>Settings</ion-card-title>\\n          </ion-card-header>\\n          <ion-card-content>\\n            <ion-item>\\n              <ion-label>Line chart?</ion-label>\\n              <ion-toggle (ionChange)=\\\"typeChanged($event)\\\" checked></ion-toggle>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label>Show legend?</ion-label>\\n              <ion-toggle [(ngModel)]=\\\"showLegend\\\"></ion-toggle>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label>Background color</ion-label>\\n              <ion-input type=\\\"text\\\" [(ngModel)]=\\\"chartColors[0].backgroundColor\\\"></ion-input>\\n            </ion-item>\\n          </ion-card-content>\\n        </ion-card> -->\\n      \\n      </ion-card>\\n  \\n    </div>\\n  \\n  </ion-content>\\n  \";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChildesPage } from './childes.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChildesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChildesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ChildesPageRoutingModule } from './childes-routing.module';\nimport { MatExpansionModule} from '@angular/material/expansion';\nimport { MatTableModule} from '@angular/material/table';\nimport { ChildesPage } from './childes.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MatTableModule,\n    MatExpansionModule,\n    ChildesPageRoutingModule\n  ],\n  declarations: [ChildesPage]\n})\nexport class ChildesPageModule {}\n","export default \"ion-content {\\n  --background: rgb(207,158,152);\\n  --background: linear-gradient(180deg, rgba(207,158,152,0.7906512946975666) 0%, rgba(255,189,96,1) 70%);\\n}\\nion-content table {\\n  width: 100%;\\n}\\nion-content .back-btn {\\n  background-color: rgba(137, 43, 226, 0);\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n}\\nion-content .head {\\n  height: 50%;\\n  background-color: brown;\\n  border-bottom-left-radius: 50px;\\n  box-shadow: 43px 19px 46px -18px;\\n  overflow: hidden;\\n}\\nion-content .head img {\\n  width: 100%;\\n}\\nion-content .stats ion-card {\\n  height: 70px;\\n  text-align: center;\\n  font-size: 12px;\\n}\\nion-content .stats ion-card p {\\n  margin-top: 5px;\\n}\\nion-content .stats ion-card h6 {\\n  margin-top: -4px;\\n  font-weight: bolder;\\n  color: black;\\n}\\nion-content .body mat-accordion mat-expansion-panel mat-expansion-panel-header mat-panel-title {\\n  font-weight: bold;\\n}\\nion-content .body mat-accordion mat-expansion-panel mat-expansion-panel-header mat-panel-description {\\n  color: rgba(121, 121, 121, 0.651);\\n}\\nion-content .body mat-accordion mat-expansion-panel ion-label {\\n  display: block;\\n}\\nion-content .body mat-accordion mat-expansion-panel ion-label p {\\n  display: inline-block;\\n  width: 115px;\\n  text-align: left;\\n  font-weight: bold;\\n}\\nion-content .body ion-card ion-card-header.padding {\\n  padding-bottom: 35px;\\n}\\nion-content .body ion-card ion-card-header.padding ion-card-subtitle {\\n  display: inline-block;\\n  position: absolute;\\n  right: 22px;\\n}\\nion-content .body ion-card ion-card-header.padding ion-card-title {\\n  display: inline-block;\\n  position: absolute;\\n  left: 15px;\\n  padding: 0;\\n  margin: 0;\\n}\\nion-content .body ion-card ion-card-content ion-label {\\n  display: block;\\n}\\nion-content .body ion-card ion-card-content ion-label p {\\n  display: inline-block;\\n  width: 115px;\\n  text-align: left;\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RhcmtzaWRlL0Rlc2t0b3Avc2Nob29sL3NjaG9vbC1hcHAvc3JjL2FwcC9wYWdlcy9jaGlsZGVzL2NoaWxkZXMucGFnZS5zY3NzIiwic3JjL2FwcC9wYWdlcy9jaGlsZGVzL2NoaWxkZXMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsOEJBQUE7RUFDQSxzR0FBQTtBQ0NGO0FEQUU7RUFDRSxXQUFBO0FDRUo7QURBRTtFQUNFLHVDQUFBO0VBQ0Esa0JBQUE7RUFDQSxNQUFBO0VBQ0EsT0FBQTtBQ0VKO0FEQ0U7RUFDRSxXQUFBO0VBQ0EsdUJBQUE7RUFDQSwrQkFBQTtFQUNBLGdDQUFBO0VBQ0EsZ0JBQUE7QUNDSjtBREFJO0VBQ0UsV0FBQTtBQ0VOO0FET0k7RUFFRSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0FDTk47QURRTTtFQUNFLGVBQUE7QUNOUjtBRFFNO0VBQ0UsZ0JBQUE7RUFDQSxtQkFBQTtFQUNBLFlBQUE7QUNOUjtBRGVVO0VBQ0UsaUJBQUE7QUNiWjtBRGVVO0VBQ0UsaUNBQUE7QUNiWjtBRGdCUTtFQUNFLGNBQUE7QUNkVjtBRGVVO0VBQ0UscUJBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtBQ2JaO0FEcUJNO0VBQ0Usb0JBQUE7QUNuQlI7QURvQlE7RUFDRSxxQkFBQTtFQUNBLGtCQUFBO0VBQ0EsV0FBQTtBQ2xCVjtBRG9CUTtFQUNFLHFCQUFBO0VBQ0Esa0JBQUE7RUFDQSxVQUFBO0VBQ0EsVUFBQTtFQUNBLFNBQUE7QUNsQlY7QUR1QlE7RUFDRSxjQUFBO0FDckJWO0FEc0JVO0VBQ0UscUJBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtBQ3BCWiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NoaWxkZXMvY2hpbGRlcy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudHtcbiAgLS1iYWNrZ3JvdW5kOiByZ2IoMjA3LDE1OCwxNTIpO1xuICAtLWJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsIHJnYmEoMjA3LDE1OCwxNTIsMC43OTA2NTEyOTQ2OTc1NjY2KSAwJSwgcmdiYSgyNTUsMTg5LDk2LDEpIDcwJSk7XG4gIHRhYmxlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICAuYmFjay1idG57XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMzcsIDQzLCAyMjYsIDApO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgfVxuICBcbiAgLmhlYWR7XG4gICAgaGVpZ2h0OiA1MCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogYnJvd247XG4gICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogNTBweDtcbiAgICBib3gtc2hhZG93OiA0M3B4IDE5cHggNDZweCAtMThweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGltZ3tcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgLy8gb3BhY2l0eTogNDElO1xuXG4gICAgfVxuICB9XG5cbiAgLnN0YXRze1xuICAgIC8vIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTY1LCA0MiwgNDIsIDAuMDU1KTsgXG4gICAgLy8gbWFyZ2luOiAyNXB4IDA7XG4gICAgaW9uLWNhcmR7XG4gICAgICAvLyBib3JkZXI6IDFweCBzb2xpZCByZWQ7XG4gICAgICBoZWlnaHQ6IDcwcHg7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBmb250LXNpemU6IDEycHg7XG5cbiAgICAgIHB7XG4gICAgICAgIG1hcmdpbi10b3A6IDVweDtcbiAgICAgIH1cbiAgICAgIGg2e1xuICAgICAgICBtYXJnaW4tdG9wOiAtNHB4O1xuICAgICAgICBmb250LXdlaWdodDogYm9sZGVyO1xuICAgICAgICBjb2xvcjogYmxhY2s7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLmJvZHl7XG4gICAgbWF0LWFjY29yZGlvbntcbiAgICAgIG1hdC1leHBhbnNpb24tcGFuZWx7XG4gICAgICAgIG1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVye1xuICAgICAgICAgIG1hdC1wYW5lbC10aXRsZXtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICAgIH1cbiAgICAgICAgICBtYXQtcGFuZWwtZGVzY3JpcHRpb257XG4gICAgICAgICAgICBjb2xvcjogcmdiYSgxMjEsIDEyMSwgMTIxLCAwLjY1MSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlvbi1sYWJlbHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICBwe1xuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgd2lkdGg6IDExNXB4O1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuXG4gICAgaW9uLWNhcmR7XG4gICAgICBpb24tY2FyZC1oZWFkZXIucGFkZGluZ3tcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDM1cHg7XG4gICAgICAgIGlvbi1jYXJkLXN1YnRpdGxle1xuICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgcmlnaHQ6IDIycHg7XG4gICAgICAgIH1cbiAgICAgICAgaW9uLWNhcmQtdGl0bGV7XG4gICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICBsZWZ0OiAxNXB4O1xuICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlvbi1jYXJkLWNvbnRlbnR7XG4gICAgICAgIGlvbi1sYWJlbHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICBwe1xuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgd2lkdGg6IDExNXB4O1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufSIsImlvbi1jb250ZW50IHtcbiAgLS1iYWNrZ3JvdW5kOiByZ2IoMjA3LDE1OCwxNTIpO1xuICAtLWJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsIHJnYmEoMjA3LDE1OCwxNTIsMC43OTA2NTEyOTQ2OTc1NjY2KSAwJSwgcmdiYSgyNTUsMTg5LDk2LDEpIDcwJSk7XG59XG5pb24tY29udGVudCB0YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuaW9uLWNvbnRlbnQgLmJhY2stYnRuIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMzcsIDQzLCAyMjYsIDApO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbn1cbmlvbi1jb250ZW50IC5oZWFkIHtcbiAgaGVpZ2h0OiA1MCU7XG4gIGJhY2tncm91bmQtY29sb3I6IGJyb3duO1xuICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiA1MHB4O1xuICBib3gtc2hhZG93OiA0M3B4IDE5cHggNDZweCAtMThweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbmlvbi1jb250ZW50IC5oZWFkIGltZyB7XG4gIHdpZHRoOiAxMDAlO1xufVxuaW9uLWNvbnRlbnQgLnN0YXRzIGlvbi1jYXJkIHtcbiAgaGVpZ2h0OiA3MHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMTJweDtcbn1cbmlvbi1jb250ZW50IC5zdGF0cyBpb24tY2FyZCBwIHtcbiAgbWFyZ2luLXRvcDogNXB4O1xufVxuaW9uLWNvbnRlbnQgLnN0YXRzIGlvbi1jYXJkIGg2IHtcbiAgbWFyZ2luLXRvcDogLTRweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbiAgY29sb3I6IGJsYWNrO1xufVxuaW9uLWNvbnRlbnQgLmJvZHkgbWF0LWFjY29yZGlvbiBtYXQtZXhwYW5zaW9uLXBhbmVsIG1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyIG1hdC1wYW5lbC10aXRsZSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuaW9uLWNvbnRlbnQgLmJvZHkgbWF0LWFjY29yZGlvbiBtYXQtZXhwYW5zaW9uLXBhbmVsIG1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyIG1hdC1wYW5lbC1kZXNjcmlwdGlvbiB7XG4gIGNvbG9yOiByZ2JhKDEyMSwgMTIxLCAxMjEsIDAuNjUxKTtcbn1cbmlvbi1jb250ZW50IC5ib2R5IG1hdC1hY2NvcmRpb24gbWF0LWV4cGFuc2lvbi1wYW5lbCBpb24tbGFiZWwge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbmlvbi1jb250ZW50IC5ib2R5IG1hdC1hY2NvcmRpb24gbWF0LWV4cGFuc2lvbi1wYW5lbCBpb24tbGFiZWwgcCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDExNXB4O1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbmlvbi1jb250ZW50IC5ib2R5IGlvbi1jYXJkIGlvbi1jYXJkLWhlYWRlci5wYWRkaW5nIHtcbiAgcGFkZGluZy1ib3R0b206IDM1cHg7XG59XG5pb24tY29udGVudCAuYm9keSBpb24tY2FyZCBpb24tY2FyZC1oZWFkZXIucGFkZGluZyBpb24tY2FyZC1zdWJ0aXRsZSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMjJweDtcbn1cbmlvbi1jb250ZW50IC5ib2R5IGlvbi1jYXJkIGlvbi1jYXJkLWhlYWRlci5wYWRkaW5nIGlvbi1jYXJkLXRpdGxlIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDE1cHg7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbn1cbmlvbi1jb250ZW50IC5ib2R5IGlvbi1jYXJkIGlvbi1jYXJkLWNvbnRlbnQgaW9uLWxhYmVsIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5pb24tY29udGVudCAuYm9keSBpb24tY2FyZCBpb24tY2FyZC1jb250ZW50IGlvbi1sYWJlbCBwIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogMTE1cHg7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufSJdfQ== */\";","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Subscription } from 'rxjs';\n// import { LoginService } from '../providers/login.service';\nimport { ChartDataSets } from 'chart.js';\n// import { Color, Label } from 'ng2-charts';\nimport { HttpClient } from '@angular/common/http';\nimport { LoginService } from 'src/app/providers/login.service';\n\n@Component({\n  selector: 'app-childes',\n  templateUrl: './childes.page.html',\n  styleUrls: ['./childes.page.scss'],\n})\nexport class ChildesPage  implements OnInit, OnDestroy {\n\n  displayedColumns: string[] = ['position', 'name', 'teacher' ];\n  dataSource;\n\n  subjectsLenght = 0;\n  tearmSubjects;\n\n  classAttend;\n  busAttend;\n  \n  classTimesData = [];\n  classAllMonth = [];\n  busTimesData = [];\n  busAllMonth = [];\n\n  Subscription: Subscription;\n  studentData;\n  // Data\n  chartData: ChartDataSets[] = [{ data: [], label: 'Stock price' }];\n  // chartLabels: Label[];\n  //  // Options\n  //  chartOptions = {\n  //   responsive: true,\n  //   title: {\n  //     display: true,\n  //     text: 'Historic Stock price'\n  //   },\n  //   pan: {\n  //     enabled: true,\n  //     mode: 'xy'\n  //   },\n  //   zoom: {\n  //     enabled: true,\n  //     mode: 'xy'\n  //   }\n  // };\n  // chartColors: Color[] = [\n  //   {\n  //     borderColor: '#000000',\n  //     backgroundColor: '#ff00ff'\n  //   }\n  // ];\n  chartType = 'line';\n  showLegend = false;\n  spinner: boolean= true;\n  // For search\n  stock = '';\n\n  constructor(  private http: HttpClient,\n                private route: ActivatedRoute, \n                private LoginService: LoginService, \n              ) { }\n\n  ngOnInit() {\n\n    console.log('==============================> ChildPage <======================================')\n\n    this.route.paramMap\n    .subscribe( (paramMap: ParamMap ) => {\n      if ( paramMap.has('id') ) {\n        // console.log('paramMap stage --', paramMap.get('stage'))\n          console.log('paramMap id --', paramMap.get('id'))\n          this.Subscription = this.LoginService.getStudent(paramMap.get('id'))\n          .subscribe( studentData => {\n            console.log('student found =>', studentData)\n            this.studentData = studentData;\n\n            console.log('this.studentData.class.subjects  =>', this.studentData.class.subjects.length)\n            if (this.studentData.class.subjects.length > 0) {\n              let fTearm  = this.studentData.class.subjects[0].termSubjects[0].classSubjects.length;\n              let lTearm  = this.studentData.class.subjects[1].termSubjects[0].classSubjects.length;\n              let data  = this.studentData.class.subjects.filter(subjects => subjects.term == 'first term' )\n              this.dataSource = data[0].termSubjects[0].classSubjects;\n              this.subjectsLenght = fTearm + lTearm;\n            } else {\n              this.subjectsLenght = 0;\n            }\n            console.log('subjects length',this.subjectsLenght)\n          })\n\n        // grt student attend\n          this.Subscription = this.LoginService.getStudentAttend(paramMap.get('id'))\n          .subscribe( studentAttendData => {\n            console.log('student Attend Data found =>', studentAttendData)\n            this.classAttend = studentAttendData.classAttend;\n            this.busAttend   = studentAttendData.busAttend;\n            this.spinner = false;\n\n            let  classTimesData = [];\n            let  classAllMonth = [];\n            let  busTimesData = [];\n            let  busAllMonth = [];\n            this.classTimesData = classTimesData = [];\n            this.classAllMonth = classAllMonth = [];\n            this.busTimesData =  busTimesData = [];\n            this.busAllMonth = busAllMonth = [];\n\n            let jsonData = studentAttendData.classAttend;\n            let jsonDataBus = studentAttendData.busAttend;\n            if (this.classAttend.length > 0) {\n              Object.keys(jsonData).forEach(function(key) {\n                var month = jsonData[key].month;\n                var day   = jsonData[key].day;\n                classTimesData.push({month: month, day: day})\n                let monthLength = classTimesData.filter( data => data.month == month ).length;\n                  if (monthLength == 1) {\n                    classAllMonth.push(month);\n                  }\n              })              \n            }\n            if (this.busAttend.length > 0) {\n              Object.keys(jsonDataBus).forEach(function(key) {\n                var month = jsonDataBus[key].month;\n                var day   = jsonDataBus[key].day;\n                busTimesData.push({month: month, day: day})\n                let monthLength = busTimesData.filter( data => data.month == month ).length;\n                  if (monthLength == 1) {\n                    busAllMonth.push(month);\n                  }\n              })              \n            }\n            // console.log('this.classTimesData  =>', this.classTimesData)\n            // console.log('this.classAllMonth  =>', this.classAllMonth)\n            // console.log('this.busTimesData  =>', this.busTimesData)\n            // console.log('this.busAllMonth  =>', this.busAllMonth)\n          })\n\n        } else {\n          console.log('paramMap --')\n        }\n      });\n  }\n\n\n  segmentChanged(e) {\n    console.log('segmentChanged =>', e.detail.value)\n    let data  = this.studentData.class.subjects.filter(subjects => subjects.term == e.detail.value )\n    this.dataSource = data[0].termSubjects[0].classSubjects;\n    console.log('=>>>>>>>>>> d', this.dataSource)\n  }\n\n\n  // char function\n  getData() {\n    this.http.get(`https://financialmodelingprep.com/api/v3/historical-price-full/${this.stock}?from=2018-03-12&to=2019-03-12`).subscribe(res => {\n    const history = res['historical'];\n\n    // this.chartLabels = [];\n    // this.chartData[0].data = [];\n\n    // for (let entry of history) {\n    //   this.chartLabels.push(entry.date);\n    //   this.chartData[0].data.push(entry['close']);\n    // }\n  });\n  }\n  // char function\n  typeChanged(e) {\n    const on = e.detail.checked;\n    this.chartType = on ? 'line' : 'bar';\n  }\n\n\n  ngOnDestroy() {\n    this.Subscription.unsubscribe()\n  }\n\n\n}\n\n"]}